package org.jcommops.api.orm;

import java.math.BigDecimal;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Config was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Config extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<BigDecimal> CYCLE_TIME = Property.create("cycleTime", BigDecimal.class);
    public static final Property<BigDecimal> DRIFT_PRESS = Property.create("driftPress", BigDecimal.class);
    public static final Property<Integer> ICE_DETECTION = Property.create("iceDetection", Integer.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<Integer> N_LEVELS = Property.create("nLevels", Integer.class);
    public static final Property<Integer> PNP = Property.create("pnp", Integer.class);
    public static final Property<BigDecimal> PROFILE_PRESS = Property.create("profilePress", BigDecimal.class);
    public static final Property<BigDecimal> SURFACE_TIME = Property.create("surfaceTime", BigDecimal.class);
    public static final Property<Integer> WATCH_CIRCLE = Property.create("watchCircle", Integer.class);
    public static final Property<List<PtfConfig>> PTF_CONFIGS = Property.create("ptfConfigs", List.class);

    public void setCycleTime(BigDecimal cycleTime) {
        writeProperty("cycleTime", cycleTime);
    }
    public BigDecimal getCycleTime() {
        return (BigDecimal)readProperty("cycleTime");
    }

    public void setDriftPress(BigDecimal driftPress) {
        writeProperty("driftPress", driftPress);
    }
    public BigDecimal getDriftPress() {
        return (BigDecimal)readProperty("driftPress");
    }

    public void setIceDetection(int iceDetection) {
        writeProperty("iceDetection", iceDetection);
    }
    public int getIceDetection() {
        Object value = readProperty("iceDetection");
        return (value != null) ? (Integer) value : 0;
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setNLevels(int nLevels) {
        writeProperty("nLevels", nLevels);
    }
    public int getNLevels() {
        Object value = readProperty("nLevels");
        return (value != null) ? (Integer) value : 0;
    }

    public void setPnp(int pnp) {
        writeProperty("pnp", pnp);
    }
    public int getPnp() {
        Object value = readProperty("pnp");
        return (value != null) ? (Integer) value : 0;
    }

    public void setProfilePress(BigDecimal profilePress) {
        writeProperty("profilePress", profilePress);
    }
    public BigDecimal getProfilePress() {
        return (BigDecimal)readProperty("profilePress");
    }

    public void setSurfaceTime(BigDecimal surfaceTime) {
        writeProperty("surfaceTime", surfaceTime);
    }
    public BigDecimal getSurfaceTime() {
        return (BigDecimal)readProperty("surfaceTime");
    }

    public void setWatchCircle(int watchCircle) {
        writeProperty("watchCircle", watchCircle);
    }
    public int getWatchCircle() {
        Object value = readProperty("watchCircle");
        return (value != null) ? (Integer) value : 0;
    }

    public void addToPtfConfigs(PtfConfig obj) {
        addToManyTarget("ptfConfigs", obj, true);
    }
    public void removeFromPtfConfigs(PtfConfig obj) {
        removeToManyTarget("ptfConfigs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfConfig> getPtfConfigs() {
        return (List<PtfConfig>)readProperty("ptfConfigs");
    }


}
