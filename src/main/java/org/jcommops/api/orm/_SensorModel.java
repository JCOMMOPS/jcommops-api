package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _SensorModel was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _SensorModel extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<Integer> AXES_NO = Property.create("axesNo", Integer.class);
    public static final Property<Integer> CALIB_FREQUENCY = Property.create("calibFrequency", Integer.class);
    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> NAME_LONG = Property.create("nameLong", String.class);
    public static final Property<String> NAME_SHORT = Property.create("nameShort", String.class);
    public static final Property<String> ORIGINAL_DATASET = Property.create("originalDataset", String.class);
    public static final Property<Integer> RESOLUTION = Property.create("resolution", Integer.class);
    public static final Property<byte[]> SPEC = Property.create("spec", byte[].class);
    public static final Property<Integer> YEARLY_DRIFT = Property.create("yearlyDrift", Integer.class);
    public static final Property<Agency> AGENCY = Property.create("agency", Agency.class);
    public static final Property<List<CruiseSensorModel>> CRUISE_SENSOR_MODELS = Property.create("cruiseSensorModels", List.class);
    public static final Property<Image> IMAGE = Property.create("image", Image.class);
    public static final Property<MasterProg> MASTER_PROG = Property.create("masterProg", MasterProg.class);
    public static final Property<List<PtfSensorModel>> PTF_SENSOR_MODELS = Property.create("ptfSensorModels", List.class);
    public static final Property<List<SensorModelNetwork>> SENSOR_MODEL_NETWORKS = Property.create("sensorModelNetworks", List.class);
    public static final Property<List<SensorType>> SENSOR_TYPES = Property.create("sensorTypes", List.class);
    public static final Property<List<Service>> SERVICES = Property.create("services", List.class);
    public static final Property<Weblink> WEBLINK = Property.create("weblink", Weblink.class);

    public void setAxesNo(int axesNo) {
        writeProperty("axesNo", axesNo);
    }
    public int getAxesNo() {
        Object value = readProperty("axesNo");
        return (value != null) ? (Integer) value : 0;
    }

    public void setCalibFrequency(int calibFrequency) {
        writeProperty("calibFrequency", calibFrequency);
    }
    public int getCalibFrequency() {
        Object value = readProperty("calibFrequency");
        return (value != null) ? (Integer) value : 0;
    }

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setNameLong(String nameLong) {
        writeProperty("nameLong", nameLong);
    }
    public String getNameLong() {
        return (String)readProperty("nameLong");
    }

    public void setNameShort(String nameShort) {
        writeProperty("nameShort", nameShort);
    }
    public String getNameShort() {
        return (String)readProperty("nameShort");
    }

    public void setOriginalDataset(String originalDataset) {
        writeProperty("originalDataset", originalDataset);
    }
    public String getOriginalDataset() {
        return (String)readProperty("originalDataset");
    }

    public void setResolution(int resolution) {
        writeProperty("resolution", resolution);
    }
    public int getResolution() {
        Object value = readProperty("resolution");
        return (value != null) ? (Integer) value : 0;
    }

    public void setSpec(byte[] spec) {
        writeProperty("spec", spec);
    }
    public byte[] getSpec() {
        return (byte[])readProperty("spec");
    }

    public void setYearlyDrift(int yearlyDrift) {
        writeProperty("yearlyDrift", yearlyDrift);
    }
    public int getYearlyDrift() {
        Object value = readProperty("yearlyDrift");
        return (value != null) ? (Integer) value : 0;
    }

    public void setAgency(Agency agency) {
        setToOneTarget("agency", agency, true);
    }

    public Agency getAgency() {
        return (Agency)readProperty("agency");
    }


    public void addToCruiseSensorModels(CruiseSensorModel obj) {
        addToManyTarget("cruiseSensorModels", obj, true);
    }
    public void removeFromCruiseSensorModels(CruiseSensorModel obj) {
        removeToManyTarget("cruiseSensorModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseSensorModel> getCruiseSensorModels() {
        return (List<CruiseSensorModel>)readProperty("cruiseSensorModels");
    }


    public void setImage(Image image) {
        setToOneTarget("image", image, true);
    }

    public Image getImage() {
        return (Image)readProperty("image");
    }


    public void setMasterProg(MasterProg masterProg) {
        setToOneTarget("masterProg", masterProg, true);
    }

    public MasterProg getMasterProg() {
        return (MasterProg)readProperty("masterProg");
    }


    public void addToPtfSensorModels(PtfSensorModel obj) {
        addToManyTarget("ptfSensorModels", obj, true);
    }
    public void removeFromPtfSensorModels(PtfSensorModel obj) {
        removeToManyTarget("ptfSensorModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfSensorModel> getPtfSensorModels() {
        return (List<PtfSensorModel>)readProperty("ptfSensorModels");
    }


    public void addToSensorModelNetworks(SensorModelNetwork obj) {
        addToManyTarget("sensorModelNetworks", obj, true);
    }
    public void removeFromSensorModelNetworks(SensorModelNetwork obj) {
        removeToManyTarget("sensorModelNetworks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SensorModelNetwork> getSensorModelNetworks() {
        return (List<SensorModelNetwork>)readProperty("sensorModelNetworks");
    }


    public void addToSensorTypes(SensorType obj) {
        addToManyTarget("sensorTypes", obj, true);
    }
    public void removeFromSensorTypes(SensorType obj) {
        removeToManyTarget("sensorTypes", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SensorType> getSensorTypes() {
        return (List<SensorType>)readProperty("sensorTypes");
    }


    public void addToServices(Service obj) {
        addToManyTarget("services", obj, true);
    }
    public void removeFromServices(Service obj) {
        removeToManyTarget("services", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Service> getServices() {
        return (List<Service>)readProperty("services");
    }


    public void setWeblink(Weblink weblink) {
        setToOneTarget("weblink", weblink, true);
    }

    public Weblink getWeblink() {
        return (Weblink)readProperty("weblink");
    }


}
