package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

/**
 * Class _GtsCccc was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _GtsCccc extends CayenneDataObject {

    public static final String CCCC_PROPERTY = "cccc";
    public static final String CENTER_PROPERTY = "center";
    public static final String CITY_PROPERTY = "city";
    public static final String ID_PROPERTY = "id";
    public static final String INSERT_MARINE_PROPERTY = "insertMarine";
    public static final String LOCATION_PROPERTY = "location";
    public static final String TAG_PROPERTY = "tag";
    public static final String TMP_PROPERTY = "tmp";
    public static final String AGENCY_PROPERTY = "agency";
    public static final String COUNTRY_PROPERTY = "country";
    public static final String GTS_CCCC_HEADERS_PROPERTY = "gtsCcccHeaders";
    public static final String OBSS_PROPERTY = "obss";
    public static final String QC_FEEDBACKS_PROPERTY = "qcFeedbacks";

    public static final String ID_PK_COLUMN = "ID";

    public void setCccc(String cccc) {
        writeProperty(CCCC_PROPERTY, cccc);
    }
    public String getCccc() {
        return (String)readProperty(CCCC_PROPERTY);
    }

    public void setCenter(String center) {
        writeProperty(CENTER_PROPERTY, center);
    }
    public String getCenter() {
        return (String)readProperty(CENTER_PROPERTY);
    }

    public void setCity(String city) {
        writeProperty(CITY_PROPERTY, city);
    }
    public String getCity() {
        return (String)readProperty(CITY_PROPERTY);
    }

    public void setId(Integer id) {
        writeProperty(ID_PROPERTY, id);
    }
    public Integer getId() {
        return (Integer)readProperty(ID_PROPERTY);
    }

    public void setInsertMarine(Integer insertMarine) {
        writeProperty(INSERT_MARINE_PROPERTY, insertMarine);
    }
    public Integer getInsertMarine() {
        return (Integer)readProperty(INSERT_MARINE_PROPERTY);
    }

    public void setLocation(String location) {
        writeProperty(LOCATION_PROPERTY, location);
    }
    public String getLocation() {
        return (String)readProperty(LOCATION_PROPERTY);
    }

    public void setTag(String tag) {
        writeProperty(TAG_PROPERTY, tag);
    }
    public String getTag() {
        return (String)readProperty(TAG_PROPERTY);
    }

    public void setTmp(String tmp) {
        writeProperty(TMP_PROPERTY, tmp);
    }
    public String getTmp() {
        return (String)readProperty(TMP_PROPERTY);
    }

    public void setAgency(Agency agency) {
        setToOneTarget(AGENCY_PROPERTY, agency, true);
    }

    public Agency getAgency() {
        return (Agency)readProperty(AGENCY_PROPERTY);
    }


    public void setCountry(Country country) {
        setToOneTarget(COUNTRY_PROPERTY, country, true);
    }

    public Country getCountry() {
        return (Country)readProperty(COUNTRY_PROPERTY);
    }


    public void addToGtsCcccHeaders(GtsCcccHeader obj) {
        addToManyTarget(GTS_CCCC_HEADERS_PROPERTY, obj, true);
    }
    public void removeFromGtsCcccHeaders(GtsCcccHeader obj) {
        removeToManyTarget(GTS_CCCC_HEADERS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<GtsCcccHeader> getGtsCcccHeaders() {
        return (List<GtsCcccHeader>)readProperty(GTS_CCCC_HEADERS_PROPERTY);
    }


    public void addToObss(Obs obj) {
        addToManyTarget(OBSS_PROPERTY, obj, true);
    }
    public void removeFromObss(Obs obj) {
        removeToManyTarget(OBSS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Obs> getObss() {
        return (List<Obs>)readProperty(OBSS_PROPERTY);
    }


    public void addToQcFeedbacks(QcFeedback obj) {
        addToManyTarget(QC_FEEDBACKS_PROPERTY, obj, true);
    }
    public void removeFromQcFeedbacks(QcFeedback obj) {
        removeToManyTarget(QC_FEEDBACKS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<QcFeedback> getQcFeedbacks() {
        return (List<QcFeedback>)readProperty(QC_FEEDBACKS_PROPERTY);
    }


}
