package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Network was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Network extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> NAME_SHORT = Property.create("nameShort", String.class);
    public static final Property<Integer> PARENT_NETWORK_ID = Property.create("parentNetworkId", Integer.class);
    public static final Property<Integer> RANK = Property.create("rank", Integer.class);
    public static final Property<String> WIGOS_CODE = Property.create("wigosCode", String.class);
    public static final Property<List<AgencyDacType>> AGENCY_DAC_TYPES = Property.create("agencyDacTypes", List.class);
    public static final Property<List<CountryCommitment>> COUNTRY_COMMITMENTS = Property.create("countryCommitments", List.class);
    public static final Property<List<Doc>> DOCS = Property.create("docs", List.class);
    public static final Property<List<Image>> IMAGES = Property.create("images", List.class);
    public static final Property<List<Indicator>> INDICATORS = Property.create("indicators", List.class);
    public static final Property<List<Indicator>> INDICATORS1 = Property.create("indicators1", List.class);
    public static final Property<List<MapTypeNetwork>> MAP_TYPE_NETWORKS = Property.create("mapTypeNetworks", List.class);
    public static final Property<List<NetworkContact>> NETWORK_CONTACTS = Property.create("networkContacts", List.class);
    public static final Property<List<NetworkCountry>> NETWORK_COUNTRIES = Property.create("networkCountries", List.class);
    public static final Property<List<NetworkPtf>> NETWORK_PTFS = Property.create("networkPtfs", List.class);
    public static final Property<List<NetworkSite>> NETWORK_SITES = Property.create("networkSites", List.class);
    public static final Property<List<Program>> PROGRAMS = Property.create("programs", List.class);
    public static final Property<List<PtfModel>> PTF_MODELS = Property.create("ptfModels", List.class);
    public static final Property<List<SensorModelNetwork>> SENSOR_MODEL_NETWORKS = Property.create("sensorModelNetworks", List.class);
    public static final Property<List<Survey>> SURVEYS = Property.create("surveys", List.class);
    public static final Property<List<UserGroup>> USER_GROUPS = Property.create("userGroups", List.class);
    public static final Property<WebMetricNetwork> WEB_METRIC_NETWORK = Property.create("webMetricNetwork", WebMetricNetwork.class);
    public static final Property<List<Weblink>> WEBLINKS = Property.create("weblinks", List.class);

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setNameShort(String nameShort) {
        writeProperty("nameShort", nameShort);
    }
    public String getNameShort() {
        return (String)readProperty("nameShort");
    }

    public void setParentNetworkId(int parentNetworkId) {
        writeProperty("parentNetworkId", parentNetworkId);
    }
    public int getParentNetworkId() {
        Object value = readProperty("parentNetworkId");
        return (value != null) ? (Integer) value : 0;
    }

    public void setRank(int rank) {
        writeProperty("rank", rank);
    }
    public int getRank() {
        Object value = readProperty("rank");
        return (value != null) ? (Integer) value : 0;
    }

    public void setWigosCode(String wigosCode) {
        writeProperty("wigosCode", wigosCode);
    }
    public String getWigosCode() {
        return (String)readProperty("wigosCode");
    }

    public void addToAgencyDacTypes(AgencyDacType obj) {
        addToManyTarget("agencyDacTypes", obj, true);
    }
    public void removeFromAgencyDacTypes(AgencyDacType obj) {
        removeToManyTarget("agencyDacTypes", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AgencyDacType> getAgencyDacTypes() {
        return (List<AgencyDacType>)readProperty("agencyDacTypes");
    }


    public void addToCountryCommitments(CountryCommitment obj) {
        addToManyTarget("countryCommitments", obj, true);
    }
    public void removeFromCountryCommitments(CountryCommitment obj) {
        removeToManyTarget("countryCommitments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CountryCommitment> getCountryCommitments() {
        return (List<CountryCommitment>)readProperty("countryCommitments");
    }


    public void addToDocs(Doc obj) {
        addToManyTarget("docs", obj, true);
    }
    public void removeFromDocs(Doc obj) {
        removeToManyTarget("docs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Doc> getDocs() {
        return (List<Doc>)readProperty("docs");
    }


    public void addToImages(Image obj) {
        addToManyTarget("images", obj, true);
    }
    public void removeFromImages(Image obj) {
        removeToManyTarget("images", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Image> getImages() {
        return (List<Image>)readProperty("images");
    }


    public void addToIndicators(Indicator obj) {
        addToManyTarget("indicators", obj, true);
    }
    public void removeFromIndicators(Indicator obj) {
        removeToManyTarget("indicators", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Indicator> getIndicators() {
        return (List<Indicator>)readProperty("indicators");
    }


    public void addToIndicators1(Indicator obj) {
        addToManyTarget("indicators1", obj, true);
    }
    public void removeFromIndicators1(Indicator obj) {
        removeToManyTarget("indicators1", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Indicator> getIndicators1() {
        return (List<Indicator>)readProperty("indicators1");
    }


    public void addToMapTypeNetworks(MapTypeNetwork obj) {
        addToManyTarget("mapTypeNetworks", obj, true);
    }
    public void removeFromMapTypeNetworks(MapTypeNetwork obj) {
        removeToManyTarget("mapTypeNetworks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<MapTypeNetwork> getMapTypeNetworks() {
        return (List<MapTypeNetwork>)readProperty("mapTypeNetworks");
    }


    public void addToNetworkContacts(NetworkContact obj) {
        addToManyTarget("networkContacts", obj, true);
    }
    public void removeFromNetworkContacts(NetworkContact obj) {
        removeToManyTarget("networkContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkContact> getNetworkContacts() {
        return (List<NetworkContact>)readProperty("networkContacts");
    }


    public void addToNetworkCountries(NetworkCountry obj) {
        addToManyTarget("networkCountries", obj, true);
    }
    public void removeFromNetworkCountries(NetworkCountry obj) {
        removeToManyTarget("networkCountries", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkCountry> getNetworkCountries() {
        return (List<NetworkCountry>)readProperty("networkCountries");
    }


    public void addToNetworkPtfs(NetworkPtf obj) {
        addToManyTarget("networkPtfs", obj, true);
    }
    public void removeFromNetworkPtfs(NetworkPtf obj) {
        removeToManyTarget("networkPtfs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkPtf> getNetworkPtfs() {
        return (List<NetworkPtf>)readProperty("networkPtfs");
    }


    public void addToNetworkSites(NetworkSite obj) {
        addToManyTarget("networkSites", obj, true);
    }
    public void removeFromNetworkSites(NetworkSite obj) {
        removeToManyTarget("networkSites", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkSite> getNetworkSites() {
        return (List<NetworkSite>)readProperty("networkSites");
    }


    public void addToPrograms(Program obj) {
        addToManyTarget("programs", obj, true);
    }
    public void removeFromPrograms(Program obj) {
        removeToManyTarget("programs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Program> getPrograms() {
        return (List<Program>)readProperty("programs");
    }


    public void addToPtfModels(PtfModel obj) {
        addToManyTarget("ptfModels", obj, true);
    }
    public void removeFromPtfModels(PtfModel obj) {
        removeToManyTarget("ptfModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfModel> getPtfModels() {
        return (List<PtfModel>)readProperty("ptfModels");
    }


    public void addToSensorModelNetworks(SensorModelNetwork obj) {
        addToManyTarget("sensorModelNetworks", obj, true);
    }
    public void removeFromSensorModelNetworks(SensorModelNetwork obj) {
        removeToManyTarget("sensorModelNetworks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SensorModelNetwork> getSensorModelNetworks() {
        return (List<SensorModelNetwork>)readProperty("sensorModelNetworks");
    }


    public void addToSurveys(Survey obj) {
        addToManyTarget("surveys", obj, true);
    }
    public void removeFromSurveys(Survey obj) {
        removeToManyTarget("surveys", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Survey> getSurveys() {
        return (List<Survey>)readProperty("surveys");
    }


    public void addToUserGroups(UserGroup obj) {
        addToManyTarget("userGroups", obj, true);
    }
    public void removeFromUserGroups(UserGroup obj) {
        removeToManyTarget("userGroups", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserGroup> getUserGroups() {
        return (List<UserGroup>)readProperty("userGroups");
    }


    public void setWebMetricNetwork(WebMetricNetwork webMetricNetwork) {
        setToOneTarget("webMetricNetwork", webMetricNetwork, true);
    }

    public WebMetricNetwork getWebMetricNetwork() {
        return (WebMetricNetwork)readProperty("webMetricNetwork");
    }


    public void addToWeblinks(Weblink obj) {
        addToManyTarget("weblinks", obj, true);
    }
    public void removeFromWeblinks(Weblink obj) {
        removeToManyTarget("weblinks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Weblink> getWeblinks() {
        return (List<Weblink>)readProperty("weblinks");
    }


}
