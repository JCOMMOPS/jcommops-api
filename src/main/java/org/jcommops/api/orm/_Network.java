package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

/**
 * Class _Network was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Network extends CayenneDataObject {

    public static final String DESCRIPTION_PROPERTY = "description";
    public static final String ID_PROPERTY = "id";
    public static final String NAME_PROPERTY = "name";
    public static final String NAME_SHORT_PROPERTY = "nameShort";
    public static final String RANK_PROPERTY = "rank";
    public static final String COUNTRY_COMMITMENTS_PROPERTY = "countryCommitments";
    public static final String INDICATORS_PROPERTY = "indicators";
    public static final String MASTER_PROG_PROPERTY = "masterProg";
    public static final String NETWORK_COUNTRIES_PROPERTY = "networkCountries";
    public static final String NETWORK_PTFS_PROPERTY = "networkPtfs";
    public static final String NETWORK_SITES_PROPERTY = "networkSites";

    public static final String ID_PK_COLUMN = "ID";

    public void setDescription(String description) {
        writeProperty(DESCRIPTION_PROPERTY, description);
    }
    public String getDescription() {
        return (String)readProperty(DESCRIPTION_PROPERTY);
    }

    public void setId(Integer id) {
        writeProperty(ID_PROPERTY, id);
    }
    public Integer getId() {
        return (Integer)readProperty(ID_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setNameShort(String nameShort) {
        writeProperty(NAME_SHORT_PROPERTY, nameShort);
    }
    public String getNameShort() {
        return (String)readProperty(NAME_SHORT_PROPERTY);
    }

    public void setRank(Integer rank) {
        writeProperty(RANK_PROPERTY, rank);
    }
    public Integer getRank() {
        return (Integer)readProperty(RANK_PROPERTY);
    }

    public void addToCountryCommitments(CountryCommitment obj) {
        addToManyTarget(COUNTRY_COMMITMENTS_PROPERTY, obj, true);
    }
    public void removeFromCountryCommitments(CountryCommitment obj) {
        removeToManyTarget(COUNTRY_COMMITMENTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CountryCommitment> getCountryCommitments() {
        return (List<CountryCommitment>)readProperty(COUNTRY_COMMITMENTS_PROPERTY);
    }


    public void addToIndicators(Indicator obj) {
        addToManyTarget(INDICATORS_PROPERTY, obj, true);
    }
    public void removeFromIndicators(Indicator obj) {
        removeToManyTarget(INDICATORS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Indicator> getIndicators() {
        return (List<Indicator>)readProperty(INDICATORS_PROPERTY);
    }


    public void setMasterProg(MasterProg masterProg) {
        setToOneTarget(MASTER_PROG_PROPERTY, masterProg, true);
    }

    public MasterProg getMasterProg() {
        return (MasterProg)readProperty(MASTER_PROG_PROPERTY);
    }


    public void addToNetworkCountries(NetworkCountry obj) {
        addToManyTarget(NETWORK_COUNTRIES_PROPERTY, obj, true);
    }
    public void removeFromNetworkCountries(NetworkCountry obj) {
        removeToManyTarget(NETWORK_COUNTRIES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkCountry> getNetworkCountries() {
        return (List<NetworkCountry>)readProperty(NETWORK_COUNTRIES_PROPERTY);
    }


    public void addToNetworkPtfs(NetworkPtf obj) {
        addToManyTarget(NETWORK_PTFS_PROPERTY, obj, true);
    }
    public void removeFromNetworkPtfs(NetworkPtf obj) {
        removeToManyTarget(NETWORK_PTFS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkPtf> getNetworkPtfs() {
        return (List<NetworkPtf>)readProperty(NETWORK_PTFS_PROPERTY);
    }


    public void addToNetworkSites(NetworkSite obj) {
        addToManyTarget(NETWORK_SITES_PROPERTY, obj, true);
    }
    public void removeFromNetworkSites(NetworkSite obj) {
        removeToManyTarget(NETWORK_SITES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkSite> getNetworkSites() {
        return (List<NetworkSite>)readProperty(NETWORK_SITES_PROPERTY);
    }


}
