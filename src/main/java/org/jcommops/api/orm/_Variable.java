package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Variable was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Variable extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> ARGO_REF = Property.create("argoRef", String.class);
    public static final Property<String> CANONICAL_UNIT = Property.create("canonicalUnit", String.class);
    public static final Property<String> CF_REF = Property.create("cfRef", String.class);
    public static final Property<String> DATA_SOURCE = Property.create("dataSource", String.class);
    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<String> IMOS_REF = Property.create("imosRef", String.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> NAME_ALTER = Property.create("nameAlter", String.class);
    public static final Property<String> NAME_SHORT = Property.create("nameShort", String.class);
    public static final Property<String> P01REF = Property.create("p01Ref", String.class);
    public static final Property<String> QC_REF = Property.create("qcRef", String.class);
    public static final Property<Integer> WIGOS_REF = Property.create("wigosRef", Integer.class);
    public static final Property<List<CruiseVariable>> CRUISE_VARIABLES = Property.create("cruiseVariables", List.class);
    public static final Property<List<ObsVariable>> OBS_VARIABLES = Property.create("obsVariables", List.class);
    public static final Property<List<PtfVariable>> PTF_VARIABLES = Property.create("ptfVariables", List.class);
    public static final Property<List<QcFeedbackVariable>> QC_FEEDBACK_VARIABLES = Property.create("qcFeedbackVariables", List.class);
    public static final Property<List<QcFeedback>> QC_FEEDBACKS = Property.create("qcFeedbacks", List.class);
    public static final Property<List<SensorType>> SENSOR_TYPES = Property.create("sensorTypes", List.class);
    public static final Property<VariableFamily> VARIABLE_FAMILY = Property.create("variableFamily", VariableFamily.class);
    public static final Property<List<VariableSub>> VARIABLE_SUBS = Property.create("variableSubs", List.class);
    public static final Property<List<VariableVariableFamily>> VARIABLE_VARIABLE_FAMILIES = Property.create("variableVariableFamilies", List.class);

    public void setArgoRef(String argoRef) {
        writeProperty("argoRef", argoRef);
    }
    public String getArgoRef() {
        return (String)readProperty("argoRef");
    }

    public void setCanonicalUnit(String canonicalUnit) {
        writeProperty("canonicalUnit", canonicalUnit);
    }
    public String getCanonicalUnit() {
        return (String)readProperty("canonicalUnit");
    }

    public void setCfRef(String cfRef) {
        writeProperty("cfRef", cfRef);
    }
    public String getCfRef() {
        return (String)readProperty("cfRef");
    }

    public void setDataSource(String dataSource) {
        writeProperty("dataSource", dataSource);
    }
    public String getDataSource() {
        return (String)readProperty("dataSource");
    }

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setImosRef(String imosRef) {
        writeProperty("imosRef", imosRef);
    }
    public String getImosRef() {
        return (String)readProperty("imosRef");
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setNameAlter(String nameAlter) {
        writeProperty("nameAlter", nameAlter);
    }
    public String getNameAlter() {
        return (String)readProperty("nameAlter");
    }

    public void setNameShort(String nameShort) {
        writeProperty("nameShort", nameShort);
    }
    public String getNameShort() {
        return (String)readProperty("nameShort");
    }

    public void setP01Ref(String p01Ref) {
        writeProperty("p01Ref", p01Ref);
    }
    public String getP01Ref() {
        return (String)readProperty("p01Ref");
    }

    public void setQcRef(String qcRef) {
        writeProperty("qcRef", qcRef);
    }
    public String getQcRef() {
        return (String)readProperty("qcRef");
    }

    public void setWigosRef(int wigosRef) {
        writeProperty("wigosRef", wigosRef);
    }
    public int getWigosRef() {
        Object value = readProperty("wigosRef");
        return (value != null) ? (Integer) value : 0;
    }

    public void addToCruiseVariables(CruiseVariable obj) {
        addToManyTarget("cruiseVariables", obj, true);
    }
    public void removeFromCruiseVariables(CruiseVariable obj) {
        removeToManyTarget("cruiseVariables", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseVariable> getCruiseVariables() {
        return (List<CruiseVariable>)readProperty("cruiseVariables");
    }


    public void addToObsVariables(ObsVariable obj) {
        addToManyTarget("obsVariables", obj, true);
    }
    public void removeFromObsVariables(ObsVariable obj) {
        removeToManyTarget("obsVariables", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ObsVariable> getObsVariables() {
        return (List<ObsVariable>)readProperty("obsVariables");
    }


    public void addToPtfVariables(PtfVariable obj) {
        addToManyTarget("ptfVariables", obj, true);
    }
    public void removeFromPtfVariables(PtfVariable obj) {
        removeToManyTarget("ptfVariables", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfVariable> getPtfVariables() {
        return (List<PtfVariable>)readProperty("ptfVariables");
    }


    public void addToQcFeedbackVariables(QcFeedbackVariable obj) {
        addToManyTarget("qcFeedbackVariables", obj, true);
    }
    public void removeFromQcFeedbackVariables(QcFeedbackVariable obj) {
        removeToManyTarget("qcFeedbackVariables", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<QcFeedbackVariable> getQcFeedbackVariables() {
        return (List<QcFeedbackVariable>)readProperty("qcFeedbackVariables");
    }


    public void addToQcFeedbacks(QcFeedback obj) {
        addToManyTarget("qcFeedbacks", obj, true);
    }
    public void removeFromQcFeedbacks(QcFeedback obj) {
        removeToManyTarget("qcFeedbacks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<QcFeedback> getQcFeedbacks() {
        return (List<QcFeedback>)readProperty("qcFeedbacks");
    }


    public void addToSensorTypes(SensorType obj) {
        addToManyTarget("sensorTypes", obj, true);
    }
    public void removeFromSensorTypes(SensorType obj) {
        removeToManyTarget("sensorTypes", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SensorType> getSensorTypes() {
        return (List<SensorType>)readProperty("sensorTypes");
    }


    public void setVariableFamily(VariableFamily variableFamily) {
        setToOneTarget("variableFamily", variableFamily, true);
    }

    public VariableFamily getVariableFamily() {
        return (VariableFamily)readProperty("variableFamily");
    }


    public void addToVariableSubs(VariableSub obj) {
        addToManyTarget("variableSubs", obj, true);
    }
    public void removeFromVariableSubs(VariableSub obj) {
        removeToManyTarget("variableSubs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<VariableSub> getVariableSubs() {
        return (List<VariableSub>)readProperty("variableSubs");
    }


    public void addToVariableVariableFamilies(VariableVariableFamily obj) {
        addToManyTarget("variableVariableFamilies", obj, true);
    }
    public void removeFromVariableVariableFamilies(VariableVariableFamily obj) {
        removeToManyTarget("variableVariableFamilies", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<VariableVariableFamily> getVariableVariableFamilies() {
        return (List<VariableVariableFamily>)readProperty("variableVariableFamilies");
    }


}
