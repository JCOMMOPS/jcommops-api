package org.jcommops.api.orm;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _IndicatorValue was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _IndicatorValue extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<LocalDateTime> END_DATE = Property.create("endDate", LocalDateTime.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<Integer> INDICATOR_ID = Property.create("indicatorId", Integer.class);
    public static final Property<LocalDateTime> START_DATE = Property.create("startDate", LocalDateTime.class);
    public static final Property<BigDecimal> VALUE = Property.create("value", BigDecimal.class);
    public static final Property<BigDecimal> VALUE_RAW = Property.create("valueRaw", BigDecimal.class);

    public void setEndDate(LocalDateTime endDate) {
        writeProperty("endDate", endDate);
    }
    public LocalDateTime getEndDate() {
        return (LocalDateTime)readProperty("endDate");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setIndicatorId(int indicatorId) {
        writeProperty("indicatorId", indicatorId);
    }
    public int getIndicatorId() {
        Object value = readProperty("indicatorId");
        return (value != null) ? (Integer) value : 0;
    }

    public void setStartDate(LocalDateTime startDate) {
        writeProperty("startDate", startDate);
    }
    public LocalDateTime getStartDate() {
        return (LocalDateTime)readProperty("startDate");
    }

    public void setValue(BigDecimal value) {
        writeProperty("value", value);
    }
    public BigDecimal getValue() {
        return (BigDecimal)readProperty("value");
    }

    public void setValueRaw(BigDecimal valueRaw) {
        writeProperty("valueRaw", valueRaw);
    }
    public BigDecimal getValueRaw() {
        return (BigDecimal)readProperty("valueRaw");
    }

}
