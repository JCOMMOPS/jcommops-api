package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Role was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Role extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> NAME_ALTER = Property.create("nameAlter", String.class);
    public static final Property<String> NAME_SHORT = Property.create("nameShort", String.class);
    public static final Property<Integer> RANK = Property.create("rank", Integer.class);
    public static final Property<List<CruiseContact>> CRUISE_CONTACTS = Property.create("cruiseContacts", List.class);
    public static final Property<List<NetworkContact>> NETWORK_CONTACTS = Property.create("networkContacts", List.class);
    public static final Property<List<ProgramContact>> PROGRAM_CONTACTS = Property.create("programContacts", List.class);
    public static final Property<List<UserGroupContact>> USER_GROUP_CONTACTS = Property.create("userGroupContacts", List.class);

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setNameAlter(String nameAlter) {
        writeProperty("nameAlter", nameAlter);
    }
    public String getNameAlter() {
        return (String)readProperty("nameAlter");
    }

    public void setNameShort(String nameShort) {
        writeProperty("nameShort", nameShort);
    }
    public String getNameShort() {
        return (String)readProperty("nameShort");
    }

    public void setRank(int rank) {
        writeProperty("rank", rank);
    }
    public int getRank() {
        Object value = readProperty("rank");
        return (value != null) ? (Integer) value : 0;
    }

    public void addToCruiseContacts(CruiseContact obj) {
        addToManyTarget("cruiseContacts", obj, true);
    }
    public void removeFromCruiseContacts(CruiseContact obj) {
        removeToManyTarget("cruiseContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseContact> getCruiseContacts() {
        return (List<CruiseContact>)readProperty("cruiseContacts");
    }


    public void addToNetworkContacts(NetworkContact obj) {
        addToManyTarget("networkContacts", obj, true);
    }
    public void removeFromNetworkContacts(NetworkContact obj) {
        removeToManyTarget("networkContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkContact> getNetworkContacts() {
        return (List<NetworkContact>)readProperty("networkContacts");
    }


    public void addToProgramContacts(ProgramContact obj) {
        addToManyTarget("programContacts", obj, true);
    }
    public void removeFromProgramContacts(ProgramContact obj) {
        removeToManyTarget("programContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ProgramContact> getProgramContacts() {
        return (List<ProgramContact>)readProperty("programContacts");
    }


    public void addToUserGroupContacts(UserGroupContact obj) {
        addToManyTarget("userGroupContacts", obj, true);
    }
    public void removeFromUserGroupContacts(UserGroupContact obj) {
        removeToManyTarget("userGroupContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserGroupContact> getUserGroupContacts() {
        return (List<UserGroupContact>)readProperty("userGroupContacts");
    }


}
