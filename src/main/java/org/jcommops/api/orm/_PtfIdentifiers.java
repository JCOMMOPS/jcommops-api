package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _PtfIdentifiers was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _PtfIdentifiers extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> DATACENTER_REF = Property.create("datacenterRef", String.class);
    public static final Property<String> ESURFMAR_REF = Property.create("esurfmarRef", String.class);
    public static final Property<String> GLOSS_REF = Property.create("glossRef", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<String> IMO_REF = Property.create("imoRef", String.class);
    public static final Property<String> INTERNAL_REF = Property.create("internalRef", String.class);
    public static final Property<String> OCEANSITES_REF = Property.create("oceansitesRef", String.class);
    public static final Property<String> ODAS_REF = Property.create("odasRef", String.class);
    public static final Property<String> OPERATOR_REF = Property.create("operatorRef", String.class);
    public static final Property<String> SEADATANET_REF = Property.create("seadatanetRef", String.class);
    public static final Property<String> WIGOS_REF = Property.create("wigosRef", String.class);
    public static final Property<List<Ptf>> PTFS = Property.create("ptfs", List.class);

    public void setDatacenterRef(String datacenterRef) {
        writeProperty("datacenterRef", datacenterRef);
    }
    public String getDatacenterRef() {
        return (String)readProperty("datacenterRef");
    }

    public void setEsurfmarRef(String esurfmarRef) {
        writeProperty("esurfmarRef", esurfmarRef);
    }
    public String getEsurfmarRef() {
        return (String)readProperty("esurfmarRef");
    }

    public void setGlossRef(String glossRef) {
        writeProperty("glossRef", glossRef);
    }
    public String getGlossRef() {
        return (String)readProperty("glossRef");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setImoRef(String imoRef) {
        writeProperty("imoRef", imoRef);
    }
    public String getImoRef() {
        return (String)readProperty("imoRef");
    }

    public void setInternalRef(String internalRef) {
        writeProperty("internalRef", internalRef);
    }
    public String getInternalRef() {
        return (String)readProperty("internalRef");
    }

    public void setOceansitesRef(String oceansitesRef) {
        writeProperty("oceansitesRef", oceansitesRef);
    }
    public String getOceansitesRef() {
        return (String)readProperty("oceansitesRef");
    }

    public void setOdasRef(String odasRef) {
        writeProperty("odasRef", odasRef);
    }
    public String getOdasRef() {
        return (String)readProperty("odasRef");
    }

    public void setOperatorRef(String operatorRef) {
        writeProperty("operatorRef", operatorRef);
    }
    public String getOperatorRef() {
        return (String)readProperty("operatorRef");
    }

    public void setSeadatanetRef(String seadatanetRef) {
        writeProperty("seadatanetRef", seadatanetRef);
    }
    public String getSeadatanetRef() {
        return (String)readProperty("seadatanetRef");
    }

    public void setWigosRef(String wigosRef) {
        writeProperty("wigosRef", wigosRef);
    }
    public String getWigosRef() {
        return (String)readProperty("wigosRef");
    }

    public void addToPtfs(Ptf obj) {
        addToManyTarget("ptfs", obj, true);
    }
    public void removeFromPtfs(Ptf obj) {
        removeToManyTarget("ptfs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Ptf> getPtfs() {
        return (List<Ptf>)readProperty("ptfs");
    }


}
