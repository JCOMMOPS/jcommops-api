package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;

/**
 * Class _Program was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Program extends CayenneDataObject {

    public static final String ACTIVE_PROPERTY = "active";
    public static final String DESCRIPTION_PROPERTY = "description";
    public static final String ID_PROPERTY = "id";
    public static final String NAME_PROPERTY = "name";
    public static final String NAME_SHORT_PROPERTY = "nameShort";
    public static final String COUNTRY_PROPERTY = "country";
    public static final String CRUISE_PROGRAMS_PROPERTY = "cruisePrograms";
    public static final String IMAGES_PROPERTY = "images";
    public static final String LINE_PROGRAMS_PROPERTY = "linePrograms";
    public static final String MASTER_PROG_PROPERTY = "masterProg";
    public static final String PROGRAM_AGENCIES_PROPERTY = "programAgencies";
    public static final String PROGRAM_CONTACTS_PROPERTY = "programContacts";
    public static final String PTFS_PROPERTY = "ptfs";
    public static final String SHIP_RECRUITMENTS_PROPERTY = "shipRecruitments";
    public static final String AGENCIES_PROPERTY = "agencies";
    public static final String WEBLINKS_PROPERTY = "weblinks";

    public static final String ID_PK_COLUMN = "ID";

    public void setActive(Integer active) {
        writeProperty(ACTIVE_PROPERTY, active);
    }
    public Integer getActive() {
        return (Integer)readProperty(ACTIVE_PROPERTY);
    }

    public void setDescription(String description) {
        writeProperty(DESCRIPTION_PROPERTY, description);
    }
    public String getDescription() {
        return (String)readProperty(DESCRIPTION_PROPERTY);
    }

    public void setId(Integer id) {
        writeProperty(ID_PROPERTY, id);
    }
    public Integer getId() {
        return (Integer)readProperty(ID_PROPERTY);
    }

    public void setName(String name) {
        writeProperty(NAME_PROPERTY, name);
    }
    public String getName() {
        return (String)readProperty(NAME_PROPERTY);
    }

    public void setNameShort(String nameShort) {
        writeProperty(NAME_SHORT_PROPERTY, nameShort);
    }
    public String getNameShort() {
        return (String)readProperty(NAME_SHORT_PROPERTY);
    }

    public void setCountry(Country country) {
        setToOneTarget(COUNTRY_PROPERTY, country, true);
    }

    public Country getCountry() {
        return (Country)readProperty(COUNTRY_PROPERTY);
    }


    public void addToCruisePrograms(CruiseProgram obj) {
        addToManyTarget(CRUISE_PROGRAMS_PROPERTY, obj, true);
    }
    public void removeFromCruisePrograms(CruiseProgram obj) {
        removeToManyTarget(CRUISE_PROGRAMS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseProgram> getCruisePrograms() {
        return (List<CruiseProgram>)readProperty(CRUISE_PROGRAMS_PROPERTY);
    }


    public void addToImages(Image obj) {
        addToManyTarget(IMAGES_PROPERTY, obj, true);
    }
    public void removeFromImages(Image obj) {
        removeToManyTarget(IMAGES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Image> getImages() {
        return (List<Image>)readProperty(IMAGES_PROPERTY);
    }


    public void addToLinePrograms(LineProgram obj) {
        addToManyTarget(LINE_PROGRAMS_PROPERTY, obj, true);
    }
    public void removeFromLinePrograms(LineProgram obj) {
        removeToManyTarget(LINE_PROGRAMS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<LineProgram> getLinePrograms() {
        return (List<LineProgram>)readProperty(LINE_PROGRAMS_PROPERTY);
    }


    public void setMasterProg(MasterProg masterProg) {
        setToOneTarget(MASTER_PROG_PROPERTY, masterProg, true);
    }

    public MasterProg getMasterProg() {
        return (MasterProg)readProperty(MASTER_PROG_PROPERTY);
    }


    public void addToProgramAgencies(ProgramAgency obj) {
        addToManyTarget(PROGRAM_AGENCIES_PROPERTY, obj, true);
    }
    public void removeFromProgramAgencies(ProgramAgency obj) {
        removeToManyTarget(PROGRAM_AGENCIES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ProgramAgency> getProgramAgencies() {
        return (List<ProgramAgency>)readProperty(PROGRAM_AGENCIES_PROPERTY);
    }


    public void addToProgramContacts(ProgramContact obj) {
        addToManyTarget(PROGRAM_CONTACTS_PROPERTY, obj, true);
    }
    public void removeFromProgramContacts(ProgramContact obj) {
        removeToManyTarget(PROGRAM_CONTACTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ProgramContact> getProgramContacts() {
        return (List<ProgramContact>)readProperty(PROGRAM_CONTACTS_PROPERTY);
    }


    public void addToPtfs(Ptf obj) {
        addToManyTarget(PTFS_PROPERTY, obj, true);
    }
    public void removeFromPtfs(Ptf obj) {
        removeToManyTarget(PTFS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Ptf> getPtfs() {
        return (List<Ptf>)readProperty(PTFS_PROPERTY);
    }


    public void addToShipRecruitments(ShipRecruitment obj) {
        addToManyTarget(SHIP_RECRUITMENTS_PROPERTY, obj, true);
    }
    public void removeFromShipRecruitments(ShipRecruitment obj) {
        removeToManyTarget(SHIP_RECRUITMENTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ShipRecruitment> getShipRecruitments() {
        return (List<ShipRecruitment>)readProperty(SHIP_RECRUITMENTS_PROPERTY);
    }


    public void addToAgencies(Agency obj) {
        addToManyTarget(AGENCIES_PROPERTY, obj, true);
    }
    public void removeFromAgencies(Agency obj) {
        removeToManyTarget(AGENCIES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Agency> getAgencies() {
        return (List<Agency>)readProperty(AGENCIES_PROPERTY);
    }


    public void addToWeblinks(Weblink obj) {
        addToManyTarget(WEBLINKS_PROPERTY, obj, true);
    }
    public void removeFromWeblinks(Weblink obj) {
        removeToManyTarget(WEBLINKS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Weblink> getWeblinks() {
        return (List<Weblink>)readProperty(WEBLINKS_PROPERTY);
    }


}
