package org.jcommops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Weblink was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Weblink extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<Integer> RANK = Property.create("rank", Integer.class);
    public static final Property<Integer> STORY_ID = Property.create("storyId", Integer.class);
    public static final Property<String> URL = Property.create("url", String.class);
    public static final Property<List<Agency>> AGENCIES = Property.create("agencies", List.class);
    public static final Property<List<AgencyDacType>> AGENCY_DAC_TYPES = Property.create("agencyDacTypes", List.class);
    public static final Property<List<Contact>> CONTACTS = Property.create("contacts", List.class);
    public static final Property<Country> COUNTRY = Property.create("country", Country.class);
    public static final Property<List<Cruise>> CRUISES = Property.create("cruises", List.class);
    public static final Property<List<Doc>> DOCS = Property.create("docs", List.class);
    public static final Property<List<Line>> LINES = Property.create("lines", List.class);
    public static final Property<List<Meeting>> MEETINGS = Property.create("meetings", List.class);
    public static final Property<Network> NETWORK = Property.create("network", Network.class);
    public static final Property<Program> PROGRAM = Property.create("program", Program.class);
    public static final Property<Ptf> PTF = Property.create("ptf", Ptf.class);
    public static final Property<List<PtfModel>> PTF_MODELS = Property.create("ptfModels", List.class);
    public static final Property<List<QcFeedback>> QC_FEEDBACKS = Property.create("qcFeedbacks", List.class);
    public static final Property<List<SensorModel>> SENSOR_MODELS = Property.create("sensorModels", List.class);
    public static final Property<List<Ship>> SHIPS = Property.create("ships", List.class);
    public static final Property<Topic> TOPIC = Property.create("topic", Topic.class);
    public static final Property<UserGroup> USER_GROUP = Property.create("userGroup", UserGroup.class);
    public static final Property<List<WeblinkPtf>> WEBLINK_PTFS = Property.create("weblinkPtfs", List.class);

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setRank(int rank) {
        writeProperty("rank", rank);
    }
    public int getRank() {
        Object value = readProperty("rank");
        return (value != null) ? (Integer) value : 0;
    }

    public void setStoryId(int storyId) {
        writeProperty("storyId", storyId);
    }
    public int getStoryId() {
        Object value = readProperty("storyId");
        return (value != null) ? (Integer) value : 0;
    }

    public void setUrl(String url) {
        writeProperty("url", url);
    }
    public String getUrl() {
        return (String)readProperty("url");
    }

    public void addToAgencies(Agency obj) {
        addToManyTarget("agencies", obj, true);
    }
    public void removeFromAgencies(Agency obj) {
        removeToManyTarget("agencies", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Agency> getAgencies() {
        return (List<Agency>)readProperty("agencies");
    }


    public void addToAgencyDacTypes(AgencyDacType obj) {
        addToManyTarget("agencyDacTypes", obj, true);
    }
    public void removeFromAgencyDacTypes(AgencyDacType obj) {
        removeToManyTarget("agencyDacTypes", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AgencyDacType> getAgencyDacTypes() {
        return (List<AgencyDacType>)readProperty("agencyDacTypes");
    }


    public void addToContacts(Contact obj) {
        addToManyTarget("contacts", obj, true);
    }
    public void removeFromContacts(Contact obj) {
        removeToManyTarget("contacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Contact> getContacts() {
        return (List<Contact>)readProperty("contacts");
    }


    public void setCountry(Country country) {
        setToOneTarget("country", country, true);
    }

    public Country getCountry() {
        return (Country)readProperty("country");
    }


    public void addToCruises(Cruise obj) {
        addToManyTarget("cruises", obj, true);
    }
    public void removeFromCruises(Cruise obj) {
        removeToManyTarget("cruises", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Cruise> getCruises() {
        return (List<Cruise>)readProperty("cruises");
    }


    public void addToDocs(Doc obj) {
        addToManyTarget("docs", obj, true);
    }
    public void removeFromDocs(Doc obj) {
        removeToManyTarget("docs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Doc> getDocs() {
        return (List<Doc>)readProperty("docs");
    }


    public void addToLines(Line obj) {
        addToManyTarget("lines", obj, true);
    }
    public void removeFromLines(Line obj) {
        removeToManyTarget("lines", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Line> getLines() {
        return (List<Line>)readProperty("lines");
    }


    public void addToMeetings(Meeting obj) {
        addToManyTarget("meetings", obj, true);
    }
    public void removeFromMeetings(Meeting obj) {
        removeToManyTarget("meetings", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Meeting> getMeetings() {
        return (List<Meeting>)readProperty("meetings");
    }


    public void setNetwork(Network network) {
        setToOneTarget("network", network, true);
    }

    public Network getNetwork() {
        return (Network)readProperty("network");
    }


    public void setProgram(Program program) {
        setToOneTarget("program", program, true);
    }

    public Program getProgram() {
        return (Program)readProperty("program");
    }


    public void setPtf(Ptf ptf) {
        setToOneTarget("ptf", ptf, true);
    }

    public Ptf getPtf() {
        return (Ptf)readProperty("ptf");
    }


    public void addToPtfModels(PtfModel obj) {
        addToManyTarget("ptfModels", obj, true);
    }
    public void removeFromPtfModels(PtfModel obj) {
        removeToManyTarget("ptfModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfModel> getPtfModels() {
        return (List<PtfModel>)readProperty("ptfModels");
    }


    public void addToQcFeedbacks(QcFeedback obj) {
        addToManyTarget("qcFeedbacks", obj, true);
    }
    public void removeFromQcFeedbacks(QcFeedback obj) {
        removeToManyTarget("qcFeedbacks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<QcFeedback> getQcFeedbacks() {
        return (List<QcFeedback>)readProperty("qcFeedbacks");
    }


    public void addToSensorModels(SensorModel obj) {
        addToManyTarget("sensorModels", obj, true);
    }
    public void removeFromSensorModels(SensorModel obj) {
        removeToManyTarget("sensorModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SensorModel> getSensorModels() {
        return (List<SensorModel>)readProperty("sensorModels");
    }


    public void addToShips(Ship obj) {
        addToManyTarget("ships", obj, true);
    }
    public void removeFromShips(Ship obj) {
        removeToManyTarget("ships", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Ship> getShips() {
        return (List<Ship>)readProperty("ships");
    }


    public void setTopic(Topic topic) {
        setToOneTarget("topic", topic, true);
    }

    public Topic getTopic() {
        return (Topic)readProperty("topic");
    }


    public void setUserGroup(UserGroup userGroup) {
        setToOneTarget("userGroup", userGroup, true);
    }

    public UserGroup getUserGroup() {
        return (UserGroup)readProperty("userGroup");
    }


    public void addToWeblinkPtfs(WeblinkPtf obj) {
        addToManyTarget("weblinkPtfs", obj, true);
    }
    public void removeFromWeblinkPtfs(WeblinkPtf obj) {
        removeToManyTarget("weblinkPtfs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WeblinkPtf> getWeblinkPtfs() {
        return (List<WeblinkPtf>)readProperty("weblinkPtfs");
    }


}
