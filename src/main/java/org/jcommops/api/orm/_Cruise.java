package org.jcommops.api.orm;

import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

/**
 * Class _Cruise was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Cruise extends CayenneDataObject {

    public static final String ARRIVAL_DATE_PROPERTY = "arrivalDate";
    public static final String AUTONOMY_PROPERTY = "autonomy";
    public static final String COOPERATIONS_PROPERTY = "cooperations";
    public static final String COST_MONTH_PROPERTY = "costMonth";
    public static final String COST_UNIT_PROPERTY = "costUnit";
    public static final String DATES_PENDING_PROPERTY = "datesPending";
    public static final String DEMOB_DATE_PROPERTY = "demobDate";
    public static final String DEPARTURE_DATE_PROPERTY = "departureDate";
    public static final String DESCRIPTION_PROPERTY = "description";
    public static final String EMBARK_CAPACITY_PROPERTY = "embarkCapacity";
    public static final String FLEXIBLE_ROUTE_PROPERTY = "flexibleRoute";
    public static final String ID_PROPERTY = "id";
    public static final String IIOE2ID_PROPERTY = "iioe2Id";
    public static final String INSERT_DATE_PROPERTY = "insertDate";
    public static final String MOB_DATE_PROPERTY = "mobDate";
    public static final String MODIF_DATE_PROPERTY = "modifDate";
    public static final String NAME_LONG_PROPERTY = "nameLong";
    public static final String OPERATION_DATE_PROPERTY = "operationDate";
    public static final String PROJECT_NAME_PROPERTY = "projectName";
    public static final String REF_PROPERTY = "ref";
    public static final String REF_TMP_PROPERTY = "refTmp";
    public static final String ROUTE_PENDING_PROPERTY = "routePending";
    public static final String ROUTE_PRIVATE_PROPERTY = "routePrivate";
    public static final String SHAPE_PROPERTY = "shape";
    public static final String SHIP_STOP_PROPERTY = "shipStop";
    public static final String STORAGE_CAPACITY_PROPERTY = "storageCapacity";
    public static final String UNOLS_ID_PROPERTY = "unolsId";
    public static final String UPDATE_DATE_PROPERTY = "updateDate";
    public static final String VALIDATED_PROPERTY = "validated";
    public static final String WKT_PROPERTY = "wkt";
    public static final String AGENCY_PROPERTY = "agency";
    public static final String CREW_AVAILABILITY_PROPERTY = "crewAvailability";
    public static final String CRUISE_PROPERTY = "cruise";
    public static final String CRUISE_CLASS_PROPERTY = "cruiseClass";
    public static final String CRUISE_CONTACTS_PROPERTY = "cruiseContacts";
    public static final String CRUISE_COUNTRIES_PROPERTY = "cruiseCountries";
    public static final String CRUISE_PROGRAMS_PROPERTY = "cruisePrograms";
    public static final String CRUISE_SENSOR_MODELS_PROPERTY = "cruiseSensorModels";
    public static final String CRUISE_STATUS_PROPERTY = "cruiseStatus";
    public static final String CRUISE_TYPE_PROPERTY = "cruiseType";
    public static final String CRUISE_VARIABLES_PROPERTY = "cruiseVariables";
    public static final String FREQUENCY_PROPERTY = "frequency";
    public static final String IMAGE_PROPERTY = "image";
    public static final String LINE_PROPERTY = "line";
    public static final String PTF_CRUISES_PROPERTY = "ptfCruises";
    public static final String PTF_DEPLOYMENTS_PROPERTY = "ptfDeployments";
    public static final String RETRIEVALS_PROPERTY = "retrievals";
    public static final String SECTIONS_PROPERTY = "sections";
    public static final String SERVICES_PROPERTY = "services";
    public static final String SHIP_PROPERTY = "ship";
    public static final String WEB_FREQUENTATIONS_PROPERTY = "webFrequentations";
    public static final String WEBLINK_PROPERTY = "weblink";

    public static final String ID_PK_COLUMN = "ID";

    public void setArrivalDate(Date arrivalDate) {
        writeProperty(ARRIVAL_DATE_PROPERTY, arrivalDate);
    }
    public Date getArrivalDate() {
        return (Date)readProperty(ARRIVAL_DATE_PROPERTY);
    }

    public void setAutonomy(Integer autonomy) {
        writeProperty(AUTONOMY_PROPERTY, autonomy);
    }
    public Integer getAutonomy() {
        return (Integer)readProperty(AUTONOMY_PROPERTY);
    }

    public void setCooperations(Integer cooperations) {
        writeProperty(COOPERATIONS_PROPERTY, cooperations);
    }
    public Integer getCooperations() {
        return (Integer)readProperty(COOPERATIONS_PROPERTY);
    }

    public void setCostMonth(Integer costMonth) {
        writeProperty(COST_MONTH_PROPERTY, costMonth);
    }
    public Integer getCostMonth() {
        return (Integer)readProperty(COST_MONTH_PROPERTY);
    }

    public void setCostUnit(Integer costUnit) {
        writeProperty(COST_UNIT_PROPERTY, costUnit);
    }
    public Integer getCostUnit() {
        return (Integer)readProperty(COST_UNIT_PROPERTY);
    }

    public void setDatesPending(Integer datesPending) {
        writeProperty(DATES_PENDING_PROPERTY, datesPending);
    }
    public Integer getDatesPending() {
        return (Integer)readProperty(DATES_PENDING_PROPERTY);
    }

    public void setDemobDate(Date demobDate) {
        writeProperty(DEMOB_DATE_PROPERTY, demobDate);
    }
    public Date getDemobDate() {
        return (Date)readProperty(DEMOB_DATE_PROPERTY);
    }

    public void setDepartureDate(Date departureDate) {
        writeProperty(DEPARTURE_DATE_PROPERTY, departureDate);
    }
    public Date getDepartureDate() {
        return (Date)readProperty(DEPARTURE_DATE_PROPERTY);
    }

    public void setDescription(String description) {
        writeProperty(DESCRIPTION_PROPERTY, description);
    }
    public String getDescription() {
        return (String)readProperty(DESCRIPTION_PROPERTY);
    }

    public void setEmbarkCapacity(Integer embarkCapacity) {
        writeProperty(EMBARK_CAPACITY_PROPERTY, embarkCapacity);
    }
    public Integer getEmbarkCapacity() {
        return (Integer)readProperty(EMBARK_CAPACITY_PROPERTY);
    }

    public void setFlexibleRoute(Integer flexibleRoute) {
        writeProperty(FLEXIBLE_ROUTE_PROPERTY, flexibleRoute);
    }
    public Integer getFlexibleRoute() {
        return (Integer)readProperty(FLEXIBLE_ROUTE_PROPERTY);
    }

    public void setId(Integer id) {
        writeProperty(ID_PROPERTY, id);
    }
    public Integer getId() {
        return (Integer)readProperty(ID_PROPERTY);
    }

    public void setIioe2Id(String iioe2Id) {
        writeProperty(IIOE2ID_PROPERTY, iioe2Id);
    }
    public String getIioe2Id() {
        return (String)readProperty(IIOE2ID_PROPERTY);
    }

    public void setInsertDate(Date insertDate) {
        writeProperty(INSERT_DATE_PROPERTY, insertDate);
    }
    public Date getInsertDate() {
        return (Date)readProperty(INSERT_DATE_PROPERTY);
    }

    public void setMobDate(Date mobDate) {
        writeProperty(MOB_DATE_PROPERTY, mobDate);
    }
    public Date getMobDate() {
        return (Date)readProperty(MOB_DATE_PROPERTY);
    }

    public void setModifDate(Date modifDate) {
        writeProperty(MODIF_DATE_PROPERTY, modifDate);
    }
    public Date getModifDate() {
        return (Date)readProperty(MODIF_DATE_PROPERTY);
    }

    public void setNameLong(String nameLong) {
        writeProperty(NAME_LONG_PROPERTY, nameLong);
    }
    public String getNameLong() {
        return (String)readProperty(NAME_LONG_PROPERTY);
    }

    public void setOperationDate(Date operationDate) {
        writeProperty(OPERATION_DATE_PROPERTY, operationDate);
    }
    public Date getOperationDate() {
        return (Date)readProperty(OPERATION_DATE_PROPERTY);
    }

    public void setProjectName(String projectName) {
        writeProperty(PROJECT_NAME_PROPERTY, projectName);
    }
    public String getProjectName() {
        return (String)readProperty(PROJECT_NAME_PROPERTY);
    }

    public void setRef(String ref) {
        writeProperty(REF_PROPERTY, ref);
    }
    public String getRef() {
        return (String)readProperty(REF_PROPERTY);
    }

    public void setRefTmp(String refTmp) {
        writeProperty(REF_TMP_PROPERTY, refTmp);
    }
    public String getRefTmp() {
        return (String)readProperty(REF_TMP_PROPERTY);
    }

    public void setRoutePending(Integer routePending) {
        writeProperty(ROUTE_PENDING_PROPERTY, routePending);
    }
    public Integer getRoutePending() {
        return (Integer)readProperty(ROUTE_PENDING_PROPERTY);
    }

    public void setRoutePrivate(Integer routePrivate) {
        writeProperty(ROUTE_PRIVATE_PROPERTY, routePrivate);
    }
    public Integer getRoutePrivate() {
        return (Integer)readProperty(ROUTE_PRIVATE_PROPERTY);
    }

    public void setShape(byte[] shape) {
        writeProperty(SHAPE_PROPERTY, shape);
    }
    public byte[] getShape() {
        return (byte[])readProperty(SHAPE_PROPERTY);
    }

    public void setShipStop(Integer shipStop) {
        writeProperty(SHIP_STOP_PROPERTY, shipStop);
    }
    public Integer getShipStop() {
        return (Integer)readProperty(SHIP_STOP_PROPERTY);
    }

    public void setStorageCapacity(Integer storageCapacity) {
        writeProperty(STORAGE_CAPACITY_PROPERTY, storageCapacity);
    }
    public Integer getStorageCapacity() {
        return (Integer)readProperty(STORAGE_CAPACITY_PROPERTY);
    }

    public void setUnolsId(Integer unolsId) {
        writeProperty(UNOLS_ID_PROPERTY, unolsId);
    }
    public Integer getUnolsId() {
        return (Integer)readProperty(UNOLS_ID_PROPERTY);
    }

    public void setUpdateDate(Date updateDate) {
        writeProperty(UPDATE_DATE_PROPERTY, updateDate);
    }
    public Date getUpdateDate() {
        return (Date)readProperty(UPDATE_DATE_PROPERTY);
    }

    public void setValidated(Integer validated) {
        writeProperty(VALIDATED_PROPERTY, validated);
    }
    public Integer getValidated() {
        return (Integer)readProperty(VALIDATED_PROPERTY);
    }

    public void setWkt(String wkt) {
        writeProperty(WKT_PROPERTY, wkt);
    }
    public String getWkt() {
        return (String)readProperty(WKT_PROPERTY);
    }

    public void setAgency(Agency agency) {
        setToOneTarget(AGENCY_PROPERTY, agency, true);
    }

    public Agency getAgency() {
        return (Agency)readProperty(AGENCY_PROPERTY);
    }


    public void setCrewAvailability(Availability crewAvailability) {
        setToOneTarget(CREW_AVAILABILITY_PROPERTY, crewAvailability, true);
    }

    public Availability getCrewAvailability() {
        return (Availability)readProperty(CREW_AVAILABILITY_PROPERTY);
    }


    public void setCruise(CruisePolygon cruise) {
        setToOneTarget(CRUISE_PROPERTY, cruise, true);
    }

    public CruisePolygon getCruise() {
        return (CruisePolygon)readProperty(CRUISE_PROPERTY);
    }


    public void setCruiseClass(CruiseClass cruiseClass) {
        setToOneTarget(CRUISE_CLASS_PROPERTY, cruiseClass, true);
    }

    public CruiseClass getCruiseClass() {
        return (CruiseClass)readProperty(CRUISE_CLASS_PROPERTY);
    }


    public void addToCruiseContacts(CruiseContact obj) {
        addToManyTarget(CRUISE_CONTACTS_PROPERTY, obj, true);
    }
    public void removeFromCruiseContacts(CruiseContact obj) {
        removeToManyTarget(CRUISE_CONTACTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseContact> getCruiseContacts() {
        return (List<CruiseContact>)readProperty(CRUISE_CONTACTS_PROPERTY);
    }


    public void addToCruiseCountries(CruiseCountry obj) {
        addToManyTarget(CRUISE_COUNTRIES_PROPERTY, obj, true);
    }
    public void removeFromCruiseCountries(CruiseCountry obj) {
        removeToManyTarget(CRUISE_COUNTRIES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseCountry> getCruiseCountries() {
        return (List<CruiseCountry>)readProperty(CRUISE_COUNTRIES_PROPERTY);
    }


    public void addToCruisePrograms(CruiseProgram obj) {
        addToManyTarget(CRUISE_PROGRAMS_PROPERTY, obj, true);
    }
    public void removeFromCruisePrograms(CruiseProgram obj) {
        removeToManyTarget(CRUISE_PROGRAMS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseProgram> getCruisePrograms() {
        return (List<CruiseProgram>)readProperty(CRUISE_PROGRAMS_PROPERTY);
    }


    public void addToCruiseSensorModels(CruiseSensorModel obj) {
        addToManyTarget(CRUISE_SENSOR_MODELS_PROPERTY, obj, true);
    }
    public void removeFromCruiseSensorModels(CruiseSensorModel obj) {
        removeToManyTarget(CRUISE_SENSOR_MODELS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseSensorModel> getCruiseSensorModels() {
        return (List<CruiseSensorModel>)readProperty(CRUISE_SENSOR_MODELS_PROPERTY);
    }


    public void setCruiseStatus(CruiseStatus cruiseStatus) {
        setToOneTarget(CRUISE_STATUS_PROPERTY, cruiseStatus, true);
    }

    public CruiseStatus getCruiseStatus() {
        return (CruiseStatus)readProperty(CRUISE_STATUS_PROPERTY);
    }


    public void setCruiseType(CruiseType cruiseType) {
        setToOneTarget(CRUISE_TYPE_PROPERTY, cruiseType, true);
    }

    public CruiseType getCruiseType() {
        return (CruiseType)readProperty(CRUISE_TYPE_PROPERTY);
    }


    public void addToCruiseVariables(CruiseVariable obj) {
        addToManyTarget(CRUISE_VARIABLES_PROPERTY, obj, true);
    }
    public void removeFromCruiseVariables(CruiseVariable obj) {
        removeToManyTarget(CRUISE_VARIABLES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseVariable> getCruiseVariables() {
        return (List<CruiseVariable>)readProperty(CRUISE_VARIABLES_PROPERTY);
    }


    public void setFrequency(Frequency frequency) {
        setToOneTarget(FREQUENCY_PROPERTY, frequency, true);
    }

    public Frequency getFrequency() {
        return (Frequency)readProperty(FREQUENCY_PROPERTY);
    }


    public void setImage(Image image) {
        setToOneTarget(IMAGE_PROPERTY, image, true);
    }

    public Image getImage() {
        return (Image)readProperty(IMAGE_PROPERTY);
    }


    public void setLine(Line line) {
        setToOneTarget(LINE_PROPERTY, line, true);
    }

    public Line getLine() {
        return (Line)readProperty(LINE_PROPERTY);
    }


    public void addToPtfCruises(PtfCruise obj) {
        addToManyTarget(PTF_CRUISES_PROPERTY, obj, true);
    }
    public void removeFromPtfCruises(PtfCruise obj) {
        removeToManyTarget(PTF_CRUISES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfCruise> getPtfCruises() {
        return (List<PtfCruise>)readProperty(PTF_CRUISES_PROPERTY);
    }


    public void addToPtfDeployments(PtfDeployment obj) {
        addToManyTarget(PTF_DEPLOYMENTS_PROPERTY, obj, true);
    }
    public void removeFromPtfDeployments(PtfDeployment obj) {
        removeToManyTarget(PTF_DEPLOYMENTS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfDeployment> getPtfDeployments() {
        return (List<PtfDeployment>)readProperty(PTF_DEPLOYMENTS_PROPERTY);
    }


    public void addToRetrievals(Retrieval obj) {
        addToManyTarget(RETRIEVALS_PROPERTY, obj, true);
    }
    public void removeFromRetrievals(Retrieval obj) {
        removeToManyTarget(RETRIEVALS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Retrieval> getRetrievals() {
        return (List<Retrieval>)readProperty(RETRIEVALS_PROPERTY);
    }


    public void addToSections(Section obj) {
        addToManyTarget(SECTIONS_PROPERTY, obj, true);
    }
    public void removeFromSections(Section obj) {
        removeToManyTarget(SECTIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Section> getSections() {
        return (List<Section>)readProperty(SECTIONS_PROPERTY);
    }


    public void addToServices(Service obj) {
        addToManyTarget(SERVICES_PROPERTY, obj, true);
    }
    public void removeFromServices(Service obj) {
        removeToManyTarget(SERVICES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Service> getServices() {
        return (List<Service>)readProperty(SERVICES_PROPERTY);
    }


    public void setShip(Ship ship) {
        setToOneTarget(SHIP_PROPERTY, ship, true);
    }

    public Ship getShip() {
        return (Ship)readProperty(SHIP_PROPERTY);
    }


    public void addToWebFrequentations(WebFrequentation obj) {
        addToManyTarget(WEB_FREQUENTATIONS_PROPERTY, obj, true);
    }
    public void removeFromWebFrequentations(WebFrequentation obj) {
        removeToManyTarget(WEB_FREQUENTATIONS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebFrequentation> getWebFrequentations() {
        return (List<WebFrequentation>)readProperty(WEB_FREQUENTATIONS_PROPERTY);
    }


    public void setWeblink(Weblink weblink) {
        setToOneTarget(WEBLINK_PROPERTY, weblink, true);
    }

    public Weblink getWeblink() {
        return (Weblink)readProperty(WEBLINK_PROPERTY);
    }


}
