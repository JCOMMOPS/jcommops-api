package org.jcommops.api.orm;

import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Image was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Image extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<LocalDateTime> CREATION_DATE = Property.create("creationDate", LocalDateTime.class);
    public static final Property<String> CREDITS = Property.create("credits", String.class);
    public static final Property<byte[]> DATA = Property.create("data", byte[].class);
    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<String> FILENAME = Property.create("filename", String.class);
    public static final Property<String> HTML_ALT = Property.create("htmlAlt", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<Integer> STORY_ID = Property.create("storyId", Integer.class);
    public static final Property<String> TAGS = Property.create("tags", String.class);
    public static final Property<String> URL = Property.create("url", String.class);
    public static final Property<List<Agency>> AGENCIES = Property.create("agencies", List.class);
    public static final Property<Agency> AGENCY = Property.create("agency", Agency.class);
    public static final Property<List<Contact>> CONTACTS = Property.create("contacts", List.class);
    public static final Property<List<Cruise>> CRUISES = Property.create("cruises", List.class);
    public static final Property<ImageType> IMAGE_TYPE = Property.create("imageType", ImageType.class);
    public static final Property<Network> NETWORK = Property.create("network", Network.class);
    public static final Property<Program> PROGRAM = Property.create("program", Program.class);
    public static final Property<List<PtfModel>> PTF_MODELS = Property.create("ptfModels", List.class);
    public static final Property<List<PtfType>> PTF_TYPES = Property.create("ptfTypes", List.class);
    public static final Property<List<SensorModel>> SENSOR_MODELS = Property.create("sensorModels", List.class);
    public static final Property<Ship> SHIP = Property.create("ship", Ship.class);

    public void setCreationDate(LocalDateTime creationDate) {
        writeProperty("creationDate", creationDate);
    }
    public LocalDateTime getCreationDate() {
        return (LocalDateTime)readProperty("creationDate");
    }

    public void setCredits(String credits) {
        writeProperty("credits", credits);
    }
    public String getCredits() {
        return (String)readProperty("credits");
    }

    public void setData(byte[] data) {
        writeProperty("data", data);
    }
    public byte[] getData() {
        return (byte[])readProperty("data");
    }

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setFilename(String filename) {
        writeProperty("filename", filename);
    }
    public String getFilename() {
        return (String)readProperty("filename");
    }

    public void setHtmlAlt(String htmlAlt) {
        writeProperty("htmlAlt", htmlAlt);
    }
    public String getHtmlAlt() {
        return (String)readProperty("htmlAlt");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setStoryId(int storyId) {
        writeProperty("storyId", storyId);
    }
    public int getStoryId() {
        Object value = readProperty("storyId");
        return (value != null) ? (Integer) value : 0;
    }

    public void setTags(String tags) {
        writeProperty("tags", tags);
    }
    public String getTags() {
        return (String)readProperty("tags");
    }

    public void setUrl(String url) {
        writeProperty("url", url);
    }
    public String getUrl() {
        return (String)readProperty("url");
    }

    public void addToAgencies(Agency obj) {
        addToManyTarget("agencies", obj, true);
    }
    public void removeFromAgencies(Agency obj) {
        removeToManyTarget("agencies", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Agency> getAgencies() {
        return (List<Agency>)readProperty("agencies");
    }


    public void setAgency(Agency agency) {
        setToOneTarget("agency", agency, true);
    }

    public Agency getAgency() {
        return (Agency)readProperty("agency");
    }


    public void addToContacts(Contact obj) {
        addToManyTarget("contacts", obj, true);
    }
    public void removeFromContacts(Contact obj) {
        removeToManyTarget("contacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Contact> getContacts() {
        return (List<Contact>)readProperty("contacts");
    }


    public void addToCruises(Cruise obj) {
        addToManyTarget("cruises", obj, true);
    }
    public void removeFromCruises(Cruise obj) {
        removeToManyTarget("cruises", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Cruise> getCruises() {
        return (List<Cruise>)readProperty("cruises");
    }


    public void setImageType(ImageType imageType) {
        setToOneTarget("imageType", imageType, true);
    }

    public ImageType getImageType() {
        return (ImageType)readProperty("imageType");
    }


    public void setNetwork(Network network) {
        setToOneTarget("network", network, true);
    }

    public Network getNetwork() {
        return (Network)readProperty("network");
    }


    public void setProgram(Program program) {
        setToOneTarget("program", program, true);
    }

    public Program getProgram() {
        return (Program)readProperty("program");
    }


    public void addToPtfModels(PtfModel obj) {
        addToManyTarget("ptfModels", obj, true);
    }
    public void removeFromPtfModels(PtfModel obj) {
        removeToManyTarget("ptfModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfModel> getPtfModels() {
        return (List<PtfModel>)readProperty("ptfModels");
    }


    public void addToPtfTypes(PtfType obj) {
        addToManyTarget("ptfTypes", obj, true);
    }
    public void removeFromPtfTypes(PtfType obj) {
        removeToManyTarget("ptfTypes", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfType> getPtfTypes() {
        return (List<PtfType>)readProperty("ptfTypes");
    }


    public void addToSensorModels(SensorModel obj) {
        addToManyTarget("sensorModels", obj, true);
    }
    public void removeFromSensorModels(SensorModel obj) {
        removeToManyTarget("sensorModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<SensorModel> getSensorModels() {
        return (List<SensorModel>)readProperty("sensorModels");
    }


    public void setShip(Ship ship) {
        setToOneTarget("ship", ship, true);
    }

    public Ship getShip() {
        return (Ship)readProperty("ship");
    }


}
