package org.jcommops.api.orm;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;

/**
 * Class _Obs was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Obs extends CayenneDataObject {

    public static final String ASSEMBLY_DATE_PROPERTY = "assemblyDate";
    public static final String CYCLE_NB_PROPERTY = "cycleNb";
    public static final String DATA_PATH_PROPERTY = "dataPath";
    public static final String DELAY_PROPERTY = "delay";
    public static final String DELETED_PROPERTY = "deleted";
    public static final String DEPTH_PROPERTY = "depth";
    public static final String DEPTH_MAX_PROPERTY = "depthMax";
    public static final String DESCENDING_PROPERTY = "descending";
    public static final String DISTRIBUTION_DATE_PROPERTY = "distributionDate";
    public static final String FILENAME_PROPERTY = "filename";
    public static final String ID_PROPERTY = "id";
    public static final String INSERT_DATE_PROPERTY = "insertDate";
    public static final String LATEST_ASSEMBLY_DATE_PROPERTY = "latestAssemblyDate";
    public static final String LATEST_DISTRIBUTION_DATE_PROPERTY = "latestDistributionDate";
    public static final String OBS_DATE_PROPERTY = "obsDate";
    public static final String OBS_END_DATE_PROPERTY = "obsEndDate";
    public static final String SHAPE_PROPERTY = "shape";
    public static final String UPDATE_DATE_PROPERTY = "updateDate";
    public static final String WMO_PROPERTY = "wmo";
    public static final String DAC_PROPERTY = "dac";
    public static final String DATA_FORMAT_PROPERTY = "dataFormat";
    public static final String GDAC_PROPERTY = "gdac";
    public static final String GTS_CCCC_PROPERTY = "gtsCccc";
    public static final String GTS_CODE_PROPERTY = "gtsCode";
    public static final String GTS_HEADER_PROPERTY = "gtsHeader";
    public static final String GTS_INSTRUMENT_TYPE_PROPERTY = "gtsInstrumentType";
    public static final String GTS_RECORDER_TYPE_PROPERTY = "gtsRecorderType";
    public static final String OBS_DATA_STATUS_PROPERTY = "obsDataStatus";
    public static final String OBS_OBS_DATA_STATUSES_PROPERTY = "obsObsDataStatuses";
    public static final String OBS_VARIABLE_SUBS_PROPERTY = "obsVariableSubs";
    public static final String OBS_VARIABLES_PROPERTY = "obsVariables";
    public static final String PTF_PROPERTY = "ptf";
    public static final String PTF_LOC_PROPERTY = "ptfLoc";
    public static final String PTFS_PROPERTY = "ptfs";

    public static final String ID_PK_COLUMN = "ID";

    public void setAssemblyDate(Date assemblyDate) {
        writeProperty(ASSEMBLY_DATE_PROPERTY, assemblyDate);
    }
    public Date getAssemblyDate() {
        return (Date)readProperty(ASSEMBLY_DATE_PROPERTY);
    }

    public void setCycleNb(Integer cycleNb) {
        writeProperty(CYCLE_NB_PROPERTY, cycleNb);
    }
    public Integer getCycleNb() {
        return (Integer)readProperty(CYCLE_NB_PROPERTY);
    }

    public void setDataPath(String dataPath) {
        writeProperty(DATA_PATH_PROPERTY, dataPath);
    }
    public String getDataPath() {
        return (String)readProperty(DATA_PATH_PROPERTY);
    }

    public void setDelay(Integer delay) {
        writeProperty(DELAY_PROPERTY, delay);
    }
    public Integer getDelay() {
        return (Integer)readProperty(DELAY_PROPERTY);
    }

    public void setDeleted(Integer deleted) {
        writeProperty(DELETED_PROPERTY, deleted);
    }
    public Integer getDeleted() {
        return (Integer)readProperty(DELETED_PROPERTY);
    }

    public void setDepth(BigDecimal depth) {
        writeProperty(DEPTH_PROPERTY, depth);
    }
    public BigDecimal getDepth() {
        return (BigDecimal)readProperty(DEPTH_PROPERTY);
    }

    public void setDepthMax(BigDecimal depthMax) {
        writeProperty(DEPTH_MAX_PROPERTY, depthMax);
    }
    public BigDecimal getDepthMax() {
        return (BigDecimal)readProperty(DEPTH_MAX_PROPERTY);
    }

    public void setDescending(Integer descending) {
        writeProperty(DESCENDING_PROPERTY, descending);
    }
    public Integer getDescending() {
        return (Integer)readProperty(DESCENDING_PROPERTY);
    }

    public void setDistributionDate(Date distributionDate) {
        writeProperty(DISTRIBUTION_DATE_PROPERTY, distributionDate);
    }
    public Date getDistributionDate() {
        return (Date)readProperty(DISTRIBUTION_DATE_PROPERTY);
    }

    public void setFilename(String filename) {
        writeProperty(FILENAME_PROPERTY, filename);
    }
    public String getFilename() {
        return (String)readProperty(FILENAME_PROPERTY);
    }

    public void setId(Integer id) {
        writeProperty(ID_PROPERTY, id);
    }
    public Integer getId() {
        return (Integer)readProperty(ID_PROPERTY);
    }

    public void setInsertDate(Date insertDate) {
        writeProperty(INSERT_DATE_PROPERTY, insertDate);
    }
    public Date getInsertDate() {
        return (Date)readProperty(INSERT_DATE_PROPERTY);
    }

    public void setLatestAssemblyDate(Date latestAssemblyDate) {
        writeProperty(LATEST_ASSEMBLY_DATE_PROPERTY, latestAssemblyDate);
    }
    public Date getLatestAssemblyDate() {
        return (Date)readProperty(LATEST_ASSEMBLY_DATE_PROPERTY);
    }

    public void setLatestDistributionDate(Date latestDistributionDate) {
        writeProperty(LATEST_DISTRIBUTION_DATE_PROPERTY, latestDistributionDate);
    }
    public Date getLatestDistributionDate() {
        return (Date)readProperty(LATEST_DISTRIBUTION_DATE_PROPERTY);
    }

    public void setObsDate(Date obsDate) {
        writeProperty(OBS_DATE_PROPERTY, obsDate);
    }
    public Date getObsDate() {
        return (Date)readProperty(OBS_DATE_PROPERTY);
    }

    public void setObsEndDate(Date obsEndDate) {
        writeProperty(OBS_END_DATE_PROPERTY, obsEndDate);
    }
    public Date getObsEndDate() {
        return (Date)readProperty(OBS_END_DATE_PROPERTY);
    }

    public void setShape(byte[] shape) {
        writeProperty(SHAPE_PROPERTY, shape);
    }
    public byte[] getShape() {
        return (byte[])readProperty(SHAPE_PROPERTY);
    }

    public void setUpdateDate(Date updateDate) {
        writeProperty(UPDATE_DATE_PROPERTY, updateDate);
    }
    public Date getUpdateDate() {
        return (Date)readProperty(UPDATE_DATE_PROPERTY);
    }

    public void setWmo(String wmo) {
        writeProperty(WMO_PROPERTY, wmo);
    }
    public String getWmo() {
        return (String)readProperty(WMO_PROPERTY);
    }

    public void setDac(Agency dac) {
        setToOneTarget(DAC_PROPERTY, dac, true);
    }

    public Agency getDac() {
        return (Agency)readProperty(DAC_PROPERTY);
    }


    public void setDataFormat(DataFormat dataFormat) {
        setToOneTarget(DATA_FORMAT_PROPERTY, dataFormat, true);
    }

    public DataFormat getDataFormat() {
        return (DataFormat)readProperty(DATA_FORMAT_PROPERTY);
    }


    public void setGdac(Agency gdac) {
        setToOneTarget(GDAC_PROPERTY, gdac, true);
    }

    public Agency getGdac() {
        return (Agency)readProperty(GDAC_PROPERTY);
    }


    public void setGtsCccc(GtsCccc gtsCccc) {
        setToOneTarget(GTS_CCCC_PROPERTY, gtsCccc, true);
    }

    public GtsCccc getGtsCccc() {
        return (GtsCccc)readProperty(GTS_CCCC_PROPERTY);
    }


    public void setGtsCode(GtsCode gtsCode) {
        setToOneTarget(GTS_CODE_PROPERTY, gtsCode, true);
    }

    public GtsCode getGtsCode() {
        return (GtsCode)readProperty(GTS_CODE_PROPERTY);
    }


    public void setGtsHeader(GtsHeader gtsHeader) {
        setToOneTarget(GTS_HEADER_PROPERTY, gtsHeader, true);
    }

    public GtsHeader getGtsHeader() {
        return (GtsHeader)readProperty(GTS_HEADER_PROPERTY);
    }


    public void setGtsInstrumentType(GtsInstrumentType gtsInstrumentType) {
        setToOneTarget(GTS_INSTRUMENT_TYPE_PROPERTY, gtsInstrumentType, true);
    }

    public GtsInstrumentType getGtsInstrumentType() {
        return (GtsInstrumentType)readProperty(GTS_INSTRUMENT_TYPE_PROPERTY);
    }


    public void setGtsRecorderType(GtsRecorderType gtsRecorderType) {
        setToOneTarget(GTS_RECORDER_TYPE_PROPERTY, gtsRecorderType, true);
    }

    public GtsRecorderType getGtsRecorderType() {
        return (GtsRecorderType)readProperty(GTS_RECORDER_TYPE_PROPERTY);
    }


    public void setObsDataStatus(ObsDataStatus obsDataStatus) {
        setToOneTarget(OBS_DATA_STATUS_PROPERTY, obsDataStatus, true);
    }

    public ObsDataStatus getObsDataStatus() {
        return (ObsDataStatus)readProperty(OBS_DATA_STATUS_PROPERTY);
    }


    public void addToObsObsDataStatuses(ObsObsDataStatus obj) {
        addToManyTarget(OBS_OBS_DATA_STATUSES_PROPERTY, obj, true);
    }
    public void removeFromObsObsDataStatuses(ObsObsDataStatus obj) {
        removeToManyTarget(OBS_OBS_DATA_STATUSES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ObsObsDataStatus> getObsObsDataStatuses() {
        return (List<ObsObsDataStatus>)readProperty(OBS_OBS_DATA_STATUSES_PROPERTY);
    }


    public void addToObsVariableSubs(ObsVariableSub obj) {
        addToManyTarget(OBS_VARIABLE_SUBS_PROPERTY, obj, true);
    }
    public void removeFromObsVariableSubs(ObsVariableSub obj) {
        removeToManyTarget(OBS_VARIABLE_SUBS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ObsVariableSub> getObsVariableSubs() {
        return (List<ObsVariableSub>)readProperty(OBS_VARIABLE_SUBS_PROPERTY);
    }


    public void addToObsVariables(ObsVariable obj) {
        addToManyTarget(OBS_VARIABLES_PROPERTY, obj, true);
    }
    public void removeFromObsVariables(ObsVariable obj) {
        removeToManyTarget(OBS_VARIABLES_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ObsVariable> getObsVariables() {
        return (List<ObsVariable>)readProperty(OBS_VARIABLES_PROPERTY);
    }


    public void setPtf(Ptf ptf) {
        setToOneTarget(PTF_PROPERTY, ptf, true);
    }

    public Ptf getPtf() {
        return (Ptf)readProperty(PTF_PROPERTY);
    }


    public void setPtfLoc(PtfLoc ptfLoc) {
        setToOneTarget(PTF_LOC_PROPERTY, ptfLoc, true);
    }

    public PtfLoc getPtfLoc() {
        return (PtfLoc)readProperty(PTF_LOC_PROPERTY);
    }


    public void addToPtfs(Ptf obj) {
        addToManyTarget(PTFS_PROPERTY, obj, true);
    }
    public void removeFromPtfs(Ptf obj) {
        removeToManyTarget(PTFS_PROPERTY, obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Ptf> getPtfs() {
        return (List<Ptf>)readProperty(PTFS_PROPERTY);
    }


}
