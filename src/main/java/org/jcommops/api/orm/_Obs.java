package org.jcommops.api.orm;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Obs was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Obs extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<LocalDateTime> ASSEMBLY_DATE = Property.create("assemblyDate", LocalDateTime.class);
    public static final Property<Integer> CYCLE_NB = Property.create("cycleNb", Integer.class);
    public static final Property<String> DATA_PATH = Property.create("dataPath", String.class);
    public static final Property<Integer> DELAY = Property.create("delay", Integer.class);
    public static final Property<Integer> DELETED = Property.create("deleted", Integer.class);
    public static final Property<BigDecimal> DEPTH = Property.create("depth", BigDecimal.class);
    public static final Property<BigDecimal> DEPTH_MAX = Property.create("depthMax", BigDecimal.class);
    public static final Property<Integer> DESCENDING = Property.create("descending", Integer.class);
    public static final Property<LocalDateTime> DISTRIBUTION_DATE = Property.create("distributionDate", LocalDateTime.class);
    public static final Property<String> FILENAME = Property.create("filename", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<LocalDateTime> INSERT_DATE = Property.create("insertDate", LocalDateTime.class);
    public static final Property<LocalDateTime> LATEST_ASSEMBLY_DATE = Property.create("latestAssemblyDate", LocalDateTime.class);
    public static final Property<LocalDateTime> LATEST_DISTRIBUTION_DATE = Property.create("latestDistributionDate", LocalDateTime.class);
    public static final Property<LocalDateTime> OBS_DATE = Property.create("obsDate", LocalDateTime.class);
    public static final Property<LocalDateTime> OBS_END_DATE = Property.create("obsEndDate", LocalDateTime.class);
    public static final Property<byte[]> SHAPE = Property.create("shape", byte[].class);
    public static final Property<LocalDateTime> UPDATE_DATE = Property.create("updateDate", LocalDateTime.class);
    public static final Property<String> WMO = Property.create("wmo", String.class);
    public static final Property<Agency> DAC = Property.create("dac", Agency.class);
    public static final Property<DataFormat> DATA_FORMAT = Property.create("dataFormat", DataFormat.class);
    public static final Property<Agency> GDAC = Property.create("gdac", Agency.class);
    public static final Property<GtsCccc> GTS_CCCC = Property.create("gtsCccc", GtsCccc.class);
    public static final Property<GtsCode> GTS_CODE = Property.create("gtsCode", GtsCode.class);
    public static final Property<GtsHeader> GTS_HEADER = Property.create("gtsHeader", GtsHeader.class);
    public static final Property<GtsInstrumentType> GTS_INSTRUMENT_TYPE = Property.create("gtsInstrumentType", GtsInstrumentType.class);
    public static final Property<GtsRecorderType> GTS_RECORDER_TYPE = Property.create("gtsRecorderType", GtsRecorderType.class);
    public static final Property<ObsDataStatus> OBS_DATA_STATUS = Property.create("obsDataStatus", ObsDataStatus.class);
    public static final Property<List<ObsObsDataStatus>> OBS_OBS_DATA_STATUSES = Property.create("obsObsDataStatuses", List.class);
    public static final Property<List<ObsVariableSub>> OBS_VARIABLE_SUBS = Property.create("obsVariableSubs", List.class);
    public static final Property<List<ObsVariable>> OBS_VARIABLES = Property.create("obsVariables", List.class);
    public static final Property<Ptf> PTF = Property.create("ptf", Ptf.class);
    public static final Property<PtfLoc> PTF_LOC = Property.create("ptfLoc", PtfLoc.class);
    public static final Property<List<Ptf>> PTFS = Property.create("ptfs", List.class);

    public void setAssemblyDate(LocalDateTime assemblyDate) {
        writeProperty("assemblyDate", assemblyDate);
    }
    public LocalDateTime getAssemblyDate() {
        return (LocalDateTime)readProperty("assemblyDate");
    }

    public void setCycleNb(int cycleNb) {
        writeProperty("cycleNb", cycleNb);
    }
    public int getCycleNb() {
        Object value = readProperty("cycleNb");
        return (value != null) ? (Integer) value : 0;
    }

    public void setDataPath(String dataPath) {
        writeProperty("dataPath", dataPath);
    }
    public String getDataPath() {
        return (String)readProperty("dataPath");
    }

    public void setDelay(int delay) {
        writeProperty("delay", delay);
    }
    public int getDelay() {
        Object value = readProperty("delay");
        return (value != null) ? (Integer) value : 0;
    }

    public void setDeleted(int deleted) {
        writeProperty("deleted", deleted);
    }
    public int getDeleted() {
        Object value = readProperty("deleted");
        return (value != null) ? (Integer) value : 0;
    }

    public void setDepth(BigDecimal depth) {
        writeProperty("depth", depth);
    }
    public BigDecimal getDepth() {
        return (BigDecimal)readProperty("depth");
    }

    public void setDepthMax(BigDecimal depthMax) {
        writeProperty("depthMax", depthMax);
    }
    public BigDecimal getDepthMax() {
        return (BigDecimal)readProperty("depthMax");
    }

    public void setDescending(int descending) {
        writeProperty("descending", descending);
    }
    public int getDescending() {
        Object value = readProperty("descending");
        return (value != null) ? (Integer) value : 0;
    }

    public void setDistributionDate(LocalDateTime distributionDate) {
        writeProperty("distributionDate", distributionDate);
    }
    public LocalDateTime getDistributionDate() {
        return (LocalDateTime)readProperty("distributionDate");
    }

    public void setFilename(String filename) {
        writeProperty("filename", filename);
    }
    public String getFilename() {
        return (String)readProperty("filename");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setInsertDate(LocalDateTime insertDate) {
        writeProperty("insertDate", insertDate);
    }
    public LocalDateTime getInsertDate() {
        return (LocalDateTime)readProperty("insertDate");
    }

    public void setLatestAssemblyDate(LocalDateTime latestAssemblyDate) {
        writeProperty("latestAssemblyDate", latestAssemblyDate);
    }
    public LocalDateTime getLatestAssemblyDate() {
        return (LocalDateTime)readProperty("latestAssemblyDate");
    }

    public void setLatestDistributionDate(LocalDateTime latestDistributionDate) {
        writeProperty("latestDistributionDate", latestDistributionDate);
    }
    public LocalDateTime getLatestDistributionDate() {
        return (LocalDateTime)readProperty("latestDistributionDate");
    }

    public void setObsDate(LocalDateTime obsDate) {
        writeProperty("obsDate", obsDate);
    }
    public LocalDateTime getObsDate() {
        return (LocalDateTime)readProperty("obsDate");
    }

    public void setObsEndDate(LocalDateTime obsEndDate) {
        writeProperty("obsEndDate", obsEndDate);
    }
    public LocalDateTime getObsEndDate() {
        return (LocalDateTime)readProperty("obsEndDate");
    }

    public void setShape(byte[] shape) {
        writeProperty("shape", shape);
    }
    public byte[] getShape() {
        return (byte[])readProperty("shape");
    }

    public void setUpdateDate(LocalDateTime updateDate) {
        writeProperty("updateDate", updateDate);
    }
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime)readProperty("updateDate");
    }

    public void setWmo(String wmo) {
        writeProperty("wmo", wmo);
    }
    public String getWmo() {
        return (String)readProperty("wmo");
    }

    public void setDac(Agency dac) {
        setToOneTarget("dac", dac, true);
    }

    public Agency getDac() {
        return (Agency)readProperty("dac");
    }


    public void setDataFormat(DataFormat dataFormat) {
        setToOneTarget("dataFormat", dataFormat, true);
    }

    public DataFormat getDataFormat() {
        return (DataFormat)readProperty("dataFormat");
    }


    public void setGdac(Agency gdac) {
        setToOneTarget("gdac", gdac, true);
    }

    public Agency getGdac() {
        return (Agency)readProperty("gdac");
    }


    public void setGtsCccc(GtsCccc gtsCccc) {
        setToOneTarget("gtsCccc", gtsCccc, true);
    }

    public GtsCccc getGtsCccc() {
        return (GtsCccc)readProperty("gtsCccc");
    }


    public void setGtsCode(GtsCode gtsCode) {
        setToOneTarget("gtsCode", gtsCode, true);
    }

    public GtsCode getGtsCode() {
        return (GtsCode)readProperty("gtsCode");
    }


    public void setGtsHeader(GtsHeader gtsHeader) {
        setToOneTarget("gtsHeader", gtsHeader, true);
    }

    public GtsHeader getGtsHeader() {
        return (GtsHeader)readProperty("gtsHeader");
    }


    public void setGtsInstrumentType(GtsInstrumentType gtsInstrumentType) {
        setToOneTarget("gtsInstrumentType", gtsInstrumentType, true);
    }

    public GtsInstrumentType getGtsInstrumentType() {
        return (GtsInstrumentType)readProperty("gtsInstrumentType");
    }


    public void setGtsRecorderType(GtsRecorderType gtsRecorderType) {
        setToOneTarget("gtsRecorderType", gtsRecorderType, true);
    }

    public GtsRecorderType getGtsRecorderType() {
        return (GtsRecorderType)readProperty("gtsRecorderType");
    }


    public void setObsDataStatus(ObsDataStatus obsDataStatus) {
        setToOneTarget("obsDataStatus", obsDataStatus, true);
    }

    public ObsDataStatus getObsDataStatus() {
        return (ObsDataStatus)readProperty("obsDataStatus");
    }


    public void addToObsObsDataStatuses(ObsObsDataStatus obj) {
        addToManyTarget("obsObsDataStatuses", obj, true);
    }
    public void removeFromObsObsDataStatuses(ObsObsDataStatus obj) {
        removeToManyTarget("obsObsDataStatuses", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ObsObsDataStatus> getObsObsDataStatuses() {
        return (List<ObsObsDataStatus>)readProperty("obsObsDataStatuses");
    }


    public void addToObsVariableSubs(ObsVariableSub obj) {
        addToManyTarget("obsVariableSubs", obj, true);
    }
    public void removeFromObsVariableSubs(ObsVariableSub obj) {
        removeToManyTarget("obsVariableSubs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ObsVariableSub> getObsVariableSubs() {
        return (List<ObsVariableSub>)readProperty("obsVariableSubs");
    }


    public void addToObsVariables(ObsVariable obj) {
        addToManyTarget("obsVariables", obj, true);
    }
    public void removeFromObsVariables(ObsVariable obj) {
        removeToManyTarget("obsVariables", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ObsVariable> getObsVariables() {
        return (List<ObsVariable>)readProperty("obsVariables");
    }


    public void setPtf(Ptf ptf) {
        setToOneTarget("ptf", ptf, true);
    }

    public Ptf getPtf() {
        return (Ptf)readProperty("ptf");
    }


    public void setPtfLoc(PtfLoc ptfLoc) {
        setToOneTarget("ptfLoc", ptfLoc, true);
    }

    public PtfLoc getPtfLoc() {
        return (PtfLoc)readProperty("ptfLoc");
    }


    public void addToPtfs(Ptf obj) {
        addToManyTarget("ptfs", obj, true);
    }
    public void removeFromPtfs(Ptf obj) {
        removeToManyTarget("ptfs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Ptf> getPtfs() {
        return (List<Ptf>)readProperty("ptfs");
    }


}
