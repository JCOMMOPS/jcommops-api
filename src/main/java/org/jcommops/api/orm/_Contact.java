package org.jcommops.api.orm;

import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Contact was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Contact extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> ADDRESS = Property.create("address", String.class);
    public static final Property<Integer> ADMIN = Property.create("admin", Integer.class);
    public static final Property<String> EMAIL = Property.create("email", String.class);
    public static final Property<String> EMAIL2 = Property.create("email2", String.class);
    public static final Property<String> FAX = Property.create("fax", String.class);
    public static final Property<String> FIRST_NAME = Property.create("firstName", String.class);
    public static final Property<Integer> GREETINGS = Property.create("greetings", Integer.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<Integer> IS_PRIVATE = Property.create("isPrivate", Integer.class);
    public static final Property<String> LAST_NAME = Property.create("lastName", String.class);
    public static final Property<LocalDateTime> LAST_UPDATE = Property.create("lastUpdate", LocalDateTime.class);
    public static final Property<String> LOGIN = Property.create("login", String.class);
    public static final Property<String> PASSWD = Property.create("passwd", String.class);
    public static final Property<String> TEL = Property.create("tel", String.class);
    public static final Property<String> TEL2 = Property.create("tel2", String.class);
    public static final Property<String> TITLE = Property.create("title", String.class);
    public static final Property<Agency> AGENCY = Property.create("agency", Agency.class);
    public static final Property<Country> COUNTRY = Property.create("country", Country.class);
    public static final Property<List<CruiseContact>> CRUISE_CONTACTS = Property.create("cruiseContacts", List.class);
    public static final Property<List<DocContact>> DOC_CONTACTS = Property.create("docContacts", List.class);
    public static final Property<Image> IMAGE = Property.create("image", Image.class);
    public static final Property<List<Meeting>> MEETINGS = Property.create("meetings", List.class);
    public static final Property<List<NcNotification>> NC_NOTIFICATIONS = Property.create("ncNotifications", List.class);
    public static final Property<List<NcSubscription>> NC_SUBSCRIPTIONS = Property.create("ncSubscriptions", List.class);
    public static final Property<List<NetworkContact>> NETWORK_CONTACTS = Property.create("networkContacts", List.class);
    public static final Property<List<ProgramContact>> PROGRAM_CONTACTS = Property.create("programContacts", List.class);
    public static final Property<List<PtfDeployment>> PTF_DEPLOYMENTS = Property.create("ptfDeployments", List.class);
    public static final Property<List<PtfModel>> PTF_MODELS = Property.create("ptfModels", List.class);
    public static final Property<List<QcFeedback>> QC_FEEDBACKS = Property.create("qcFeedbacks", List.class);
    public static final Property<List<QcFeedback>> QC_FEEDBACKS1 = Property.create("qcFeedbacks1", List.class);
    public static final Property<List<Service>> SERVICES = Property.create("services", List.class);
    public static final Property<List<ShipRecruitment>> SHIP_RECRUITMENTS = Property.create("shipRecruitments", List.class);
    public static final Property<List<TelecomFormat>> TELECOM_FORMATS = Property.create("telecomFormats", List.class);
    public static final Property<List<UserGroupContact>> USER_GROUP_CONTACTS = Property.create("userGroupContacts", List.class);
    public static final Property<List<WebConnection>> WEB_CONNECTIONS = Property.create("webConnections", List.class);
    public static final Property<List<WebContactModule>> WEB_CONTACT_MODULES = Property.create("webContactModules", List.class);
    public static final Property<WebContactPreferences> WEB_CONTACT_PREFERENCES = Property.create("webContactPreferences", WebContactPreferences.class);
    public static final Property<List<WebFrequentation>> WEB_FREQUENTATIONS = Property.create("webFrequentations", List.class);
    public static final Property<List<WebQuery>> WEB_QUERIES = Property.create("webQueries", List.class);
    public static final Property<List<WebWorkspace>> WEB_WORKSPACES = Property.create("webWorkspaces", List.class);
    public static final Property<Weblink> WEBLINK = Property.create("weblink", Weblink.class);

    public void setAddress(String address) {
        writeProperty("address", address);
    }
    public String getAddress() {
        return (String)readProperty("address");
    }

    public void setAdmin(int admin) {
        writeProperty("admin", admin);
    }
    public int getAdmin() {
        Object value = readProperty("admin");
        return (value != null) ? (Integer) value : 0;
    }

    public void setEmail(String email) {
        writeProperty("email", email);
    }
    public String getEmail() {
        return (String)readProperty("email");
    }

    public void setEmail2(String email2) {
        writeProperty("email2", email2);
    }
    public String getEmail2() {
        return (String)readProperty("email2");
    }

    public void setFax(String fax) {
        writeProperty("fax", fax);
    }
    public String getFax() {
        return (String)readProperty("fax");
    }

    public void setFirstName(String firstName) {
        writeProperty("firstName", firstName);
    }
    public String getFirstName() {
        return (String)readProperty("firstName");
    }

    public void setGreetings(int greetings) {
        writeProperty("greetings", greetings);
    }
    public int getGreetings() {
        Object value = readProperty("greetings");
        return (value != null) ? (Integer) value : 0;
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setIsPrivate(int isPrivate) {
        writeProperty("isPrivate", isPrivate);
    }
    public int getIsPrivate() {
        Object value = readProperty("isPrivate");
        return (value != null) ? (Integer) value : 0;
    }

    public void setLastName(String lastName) {
        writeProperty("lastName", lastName);
    }
    public String getLastName() {
        return (String)readProperty("lastName");
    }

    public void setLastUpdate(LocalDateTime lastUpdate) {
        writeProperty("lastUpdate", lastUpdate);
    }
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime)readProperty("lastUpdate");
    }

    public void setLogin(String login) {
        writeProperty("login", login);
    }
    public String getLogin() {
        return (String)readProperty("login");
    }

    public void setPasswd(String passwd) {
        writeProperty("passwd", passwd);
    }
    public String getPasswd() {
        return (String)readProperty("passwd");
    }

    public void setTel(String tel) {
        writeProperty("tel", tel);
    }
    public String getTel() {
        return (String)readProperty("tel");
    }

    public void setTel2(String tel2) {
        writeProperty("tel2", tel2);
    }
    public String getTel2() {
        return (String)readProperty("tel2");
    }

    public void setTitle(String title) {
        writeProperty("title", title);
    }
    public String getTitle() {
        return (String)readProperty("title");
    }

    public void setAgency(Agency agency) {
        setToOneTarget("agency", agency, true);
    }

    public Agency getAgency() {
        return (Agency)readProperty("agency");
    }


    public void setCountry(Country country) {
        setToOneTarget("country", country, true);
    }

    public Country getCountry() {
        return (Country)readProperty("country");
    }


    public void addToCruiseContacts(CruiseContact obj) {
        addToManyTarget("cruiseContacts", obj, true);
    }
    public void removeFromCruiseContacts(CruiseContact obj) {
        removeToManyTarget("cruiseContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseContact> getCruiseContacts() {
        return (List<CruiseContact>)readProperty("cruiseContacts");
    }


    public void addToDocContacts(DocContact obj) {
        addToManyTarget("docContacts", obj, true);
    }
    public void removeFromDocContacts(DocContact obj) {
        removeToManyTarget("docContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<DocContact> getDocContacts() {
        return (List<DocContact>)readProperty("docContacts");
    }


    public void setImage(Image image) {
        setToOneTarget("image", image, true);
    }

    public Image getImage() {
        return (Image)readProperty("image");
    }


    public void addToMeetings(Meeting obj) {
        addToManyTarget("meetings", obj, true);
    }
    public void removeFromMeetings(Meeting obj) {
        removeToManyTarget("meetings", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Meeting> getMeetings() {
        return (List<Meeting>)readProperty("meetings");
    }


    public void addToNcNotifications(NcNotification obj) {
        addToManyTarget("ncNotifications", obj, true);
    }
    public void removeFromNcNotifications(NcNotification obj) {
        removeToManyTarget("ncNotifications", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NcNotification> getNcNotifications() {
        return (List<NcNotification>)readProperty("ncNotifications");
    }


    public void addToNcSubscriptions(NcSubscription obj) {
        addToManyTarget("ncSubscriptions", obj, true);
    }
    public void removeFromNcSubscriptions(NcSubscription obj) {
        removeToManyTarget("ncSubscriptions", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NcSubscription> getNcSubscriptions() {
        return (List<NcSubscription>)readProperty("ncSubscriptions");
    }


    public void addToNetworkContacts(NetworkContact obj) {
        addToManyTarget("networkContacts", obj, true);
    }
    public void removeFromNetworkContacts(NetworkContact obj) {
        removeToManyTarget("networkContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkContact> getNetworkContacts() {
        return (List<NetworkContact>)readProperty("networkContacts");
    }


    public void addToProgramContacts(ProgramContact obj) {
        addToManyTarget("programContacts", obj, true);
    }
    public void removeFromProgramContacts(ProgramContact obj) {
        removeToManyTarget("programContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ProgramContact> getProgramContacts() {
        return (List<ProgramContact>)readProperty("programContacts");
    }


    public void addToPtfDeployments(PtfDeployment obj) {
        addToManyTarget("ptfDeployments", obj, true);
    }
    public void removeFromPtfDeployments(PtfDeployment obj) {
        removeToManyTarget("ptfDeployments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfDeployment> getPtfDeployments() {
        return (List<PtfDeployment>)readProperty("ptfDeployments");
    }


    public void addToPtfModels(PtfModel obj) {
        addToManyTarget("ptfModels", obj, true);
    }
    public void removeFromPtfModels(PtfModel obj) {
        removeToManyTarget("ptfModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfModel> getPtfModels() {
        return (List<PtfModel>)readProperty("ptfModels");
    }


    public void addToQcFeedbacks(QcFeedback obj) {
        addToManyTarget("qcFeedbacks", obj, true);
    }
    public void removeFromQcFeedbacks(QcFeedback obj) {
        removeToManyTarget("qcFeedbacks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<QcFeedback> getQcFeedbacks() {
        return (List<QcFeedback>)readProperty("qcFeedbacks");
    }


    public void addToQcFeedbacks1(QcFeedback obj) {
        addToManyTarget("qcFeedbacks1", obj, true);
    }
    public void removeFromQcFeedbacks1(QcFeedback obj) {
        removeToManyTarget("qcFeedbacks1", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<QcFeedback> getQcFeedbacks1() {
        return (List<QcFeedback>)readProperty("qcFeedbacks1");
    }


    public void addToServices(Service obj) {
        addToManyTarget("services", obj, true);
    }
    public void removeFromServices(Service obj) {
        removeToManyTarget("services", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Service> getServices() {
        return (List<Service>)readProperty("services");
    }


    public void addToShipRecruitments(ShipRecruitment obj) {
        addToManyTarget("shipRecruitments", obj, true);
    }
    public void removeFromShipRecruitments(ShipRecruitment obj) {
        removeToManyTarget("shipRecruitments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ShipRecruitment> getShipRecruitments() {
        return (List<ShipRecruitment>)readProperty("shipRecruitments");
    }


    public void addToTelecomFormats(TelecomFormat obj) {
        addToManyTarget("telecomFormats", obj, true);
    }
    public void removeFromTelecomFormats(TelecomFormat obj) {
        removeToManyTarget("telecomFormats", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TelecomFormat> getTelecomFormats() {
        return (List<TelecomFormat>)readProperty("telecomFormats");
    }


    public void addToUserGroupContacts(UserGroupContact obj) {
        addToManyTarget("userGroupContacts", obj, true);
    }
    public void removeFromUserGroupContacts(UserGroupContact obj) {
        removeToManyTarget("userGroupContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserGroupContact> getUserGroupContacts() {
        return (List<UserGroupContact>)readProperty("userGroupContacts");
    }


    public void addToWebConnections(WebConnection obj) {
        addToManyTarget("webConnections", obj, true);
    }
    public void removeFromWebConnections(WebConnection obj) {
        removeToManyTarget("webConnections", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebConnection> getWebConnections() {
        return (List<WebConnection>)readProperty("webConnections");
    }


    public void addToWebContactModules(WebContactModule obj) {
        addToManyTarget("webContactModules", obj, true);
    }
    public void removeFromWebContactModules(WebContactModule obj) {
        removeToManyTarget("webContactModules", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebContactModule> getWebContactModules() {
        return (List<WebContactModule>)readProperty("webContactModules");
    }


    public void setWebContactPreferences(WebContactPreferences webContactPreferences) {
        setToOneTarget("webContactPreferences", webContactPreferences, true);
    }

    public WebContactPreferences getWebContactPreferences() {
        return (WebContactPreferences)readProperty("webContactPreferences");
    }


    public void addToWebFrequentations(WebFrequentation obj) {
        addToManyTarget("webFrequentations", obj, true);
    }
    public void removeFromWebFrequentations(WebFrequentation obj) {
        removeToManyTarget("webFrequentations", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebFrequentation> getWebFrequentations() {
        return (List<WebFrequentation>)readProperty("webFrequentations");
    }


    public void addToWebQueries(WebQuery obj) {
        addToManyTarget("webQueries", obj, true);
    }
    public void removeFromWebQueries(WebQuery obj) {
        removeToManyTarget("webQueries", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebQuery> getWebQueries() {
        return (List<WebQuery>)readProperty("webQueries");
    }


    public void addToWebWorkspaces(WebWorkspace obj) {
        addToManyTarget("webWorkspaces", obj, true);
    }
    public void removeFromWebWorkspaces(WebWorkspace obj) {
        removeToManyTarget("webWorkspaces", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<WebWorkspace> getWebWorkspaces() {
        return (List<WebWorkspace>)readProperty("webWorkspaces");
    }


    public void setWeblink(Weblink weblink) {
        setToOneTarget("weblink", weblink, true);
    }

    public Weblink getWeblink() {
        return (Weblink)readProperty("weblink");
    }


}
