package org.oceanops.api.orm;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _PtfHardware was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _PtfHardware extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<BigDecimal> BALLOON_SIZE = Property.create("balloonSize", BigDecimal.class);
    public static final Property<String> BATCH_REF = Property.create("batchRef", String.class);
    public static final Property<Integer> DROGUE = Property.create("drogue", Integer.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<LocalDateTime> MANUF_DATE = Property.create("manufDate", LocalDateTime.class);
    public static final Property<Integer> MOORING_DEPTH = Property.create("mooringDepth", Integer.class);
    public static final Property<Integer> MOORING_TYPE_ID = Property.create("mooringTypeId", Integer.class);
    public static final Property<Integer> MOORING_WEIGHT = Property.create("mooringWeight", Integer.class);
    public static final Property<String> SERIAL_REF = Property.create("serialRef", String.class);
    public static final Property<byte[]> SPEC = Property.create("spec", byte[].class);
    public static final Property<PtfBattery> BATTERY = Property.create("battery", PtfBattery.class);
    public static final Property<PtfFirmware> FIRMWARE = Property.create("firmware", PtfFirmware.class);
    public static final Property<PtfFirmware> FIRMWARE_ADD = Property.create("firmwareAdd", PtfFirmware.class);
    public static final Property<PtfHullType> HULL_TYPE = Property.create("hullType", PtfHullType.class);
    public static final Property<List<Ptf>> PTFS = Property.create("ptfs", List.class);
    public static final Property<PumpType> PUMP_TYPE = Property.create("pumpType", PumpType.class);
    public static final Property<Country> SENSOR_UPGRADE_COUNTRY = Property.create("sensorUpgradeCountry", Country.class);

    public void setBalloonSize(BigDecimal balloonSize) {
        writeProperty("balloonSize", balloonSize);
    }
    public BigDecimal getBalloonSize() {
        return (BigDecimal)readProperty("balloonSize");
    }

    public void setBatchRef(String batchRef) {
        writeProperty("batchRef", batchRef);
    }
    public String getBatchRef() {
        return (String)readProperty("batchRef");
    }

    public void setDrogue(int drogue) {
        writeProperty("drogue", drogue);
    }
    public int getDrogue() {
        Object value = readProperty("drogue");
        return (value != null) ? (Integer) value : 0;
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setManufDate(LocalDateTime manufDate) {
        writeProperty("manufDate", manufDate);
    }
    public LocalDateTime getManufDate() {
        return (LocalDateTime)readProperty("manufDate");
    }

    public void setMooringDepth(int mooringDepth) {
        writeProperty("mooringDepth", mooringDepth);
    }
    public int getMooringDepth() {
        Object value = readProperty("mooringDepth");
        return (value != null) ? (Integer) value : 0;
    }

    public void setMooringTypeId(int mooringTypeId) {
        writeProperty("mooringTypeId", mooringTypeId);
    }
    public int getMooringTypeId() {
        Object value = readProperty("mooringTypeId");
        return (value != null) ? (Integer) value : 0;
    }

    public void setMooringWeight(int mooringWeight) {
        writeProperty("mooringWeight", mooringWeight);
    }
    public int getMooringWeight() {
        Object value = readProperty("mooringWeight");
        return (value != null) ? (Integer) value : 0;
    }

    public void setSerialRef(String serialRef) {
        writeProperty("serialRef", serialRef);
    }
    public String getSerialRef() {
        return (String)readProperty("serialRef");
    }

    public void setSpec(byte[] spec) {
        writeProperty("spec", spec);
    }
    public byte[] getSpec() {
        return (byte[])readProperty("spec");
    }

    public void setBattery(PtfBattery battery) {
        setToOneTarget("battery", battery, true);
    }

    public PtfBattery getBattery() {
        return (PtfBattery)readProperty("battery");
    }


    public void setFirmware(PtfFirmware firmware) {
        setToOneTarget("firmware", firmware, true);
    }

    public PtfFirmware getFirmware() {
        return (PtfFirmware)readProperty("firmware");
    }


    public void setFirmwareAdd(PtfFirmware firmwareAdd) {
        setToOneTarget("firmwareAdd", firmwareAdd, true);
    }

    public PtfFirmware getFirmwareAdd() {
        return (PtfFirmware)readProperty("firmwareAdd");
    }


    public void setHullType(PtfHullType hullType) {
        setToOneTarget("hullType", hullType, true);
    }

    public PtfHullType getHullType() {
        return (PtfHullType)readProperty("hullType");
    }


    public void addToPtfs(Ptf obj) {
        addToManyTarget("ptfs", obj, true);
    }
    public void removeFromPtfs(Ptf obj) {
        removeToManyTarget("ptfs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Ptf> getPtfs() {
        return (List<Ptf>)readProperty("ptfs");
    }


    public void setPumpType(PumpType pumpType) {
        setToOneTarget("pumpType", pumpType, true);
    }

    public PumpType getPumpType() {
        return (PumpType)readProperty("pumpType");
    }


    public void setSensorUpgradeCountry(Country sensorUpgradeCountry) {
        setToOneTarget("sensorUpgradeCountry", sensorUpgradeCountry, true);
    }

    public Country getSensorUpgradeCountry() {
        return (Country)readProperty("sensorUpgradeCountry");
    }


}
