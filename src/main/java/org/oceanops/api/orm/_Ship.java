package org.oceanops.api.orm;

import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Ship was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Ship extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<Integer> AUTONOMY = Property.create("autonomy", Integer.class);
    public static final Property<Integer> BREADTH = Property.create("breadth", Integer.class);
    public static final Property<Integer> BRIDGE = Property.create("bridge", Integer.class);
    public static final Property<Integer> BUOY_CAPACITY = Property.create("buoyCapacity", Integer.class);
    public static final Property<String> CALL_SIGN = Property.create("callSign", String.class);
    public static final Property<LocalDateTime> COMMISSIONED_DATE = Property.create("commissionedDate", LocalDateTime.class);
    public static final Property<LocalDateTime> DECOMMISSIONED_DATE = Property.create("decommissionedDate", LocalDateTime.class);
    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<Integer> DRAUGHT = Property.create("draught", Integer.class);
    public static final Property<LocalDateTime> EXT_UPDATE = Property.create("extUpdate", LocalDateTime.class);
    public static final Property<Integer> FLOAT_CAPACITY = Property.create("floatCapacity", Integer.class);
    public static final Property<Integer> FREEBOARD = Property.create("freeboard", Integer.class);
    public static final Property<Integer> HEIGHT = Property.create("height", Integer.class);
    public static final Property<String> HOME_PORT = Property.create("homePort", String.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<String> IMO = Property.create("imo", String.class);
    public static final Property<LocalDateTime> INSERT_DATE = Property.create("insertDate", LocalDateTime.class);
    public static final Property<Integer> LENGTH = Property.create("length", Integer.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> ORIGINAL_DATASET = Property.create("originalDataset", String.class);
    public static final Property<Integer> PASSENGER_CAPACITY = Property.create("passengerCapacity", Integer.class);
    public static final Property<String> REF = Property.create("ref", String.class);
    public static final Property<Integer> REF_PARENT = Property.create("refParent", Integer.class);
    public static final Property<String> REF_TMP = Property.create("refTmp", String.class);
    public static final Property<Integer> SPEED = Property.create("speed", Integer.class);
    public static final Property<Integer> TRACKING_SYSTEM_ID = Property.create("trackingSystemId", Integer.class);
    public static final Property<LocalDateTime> UPDATE_DATE = Property.create("updateDate", LocalDateTime.class);
    public static final Property<Integer> VALIDATED = Property.create("validated", Integer.class);
    public static final Property<Country> COUNTRY = Property.create("country", Country.class);
    public static final Property<List<Cruise>> CRUISES = Property.create("cruises", List.class);
    public static final Property<List<Doc>> DOCS = Property.create("docs", List.class);
    public static final Property<List<Image>> IMAGES = Property.create("images", List.class);
    public static final Property<List<PtfDeployment>> PTF_DEPLOYMENTS = Property.create("ptfDeployments", List.class);
    public static final Property<List<Retrieval>> RETRIEVALS = Property.create("retrievals", List.class);
    public static final Property<List<ShipHistory>> SHIP_HISTORIES = Property.create("shipHistories", List.class);
    public static final Property<List<ShipLoc>> SHIP_LOCS = Property.create("shipLocs", List.class);
    public static final Property<List<ShipRecruitment>> SHIP_RECRUITMENTS = Property.create("shipRecruitments", List.class);
    public static final Property<ShipStatus> SHIP_STATUS = Property.create("shipStatus", ShipStatus.class);
    public static final Property<ShipType> SHIP_TYPE = Property.create("shipType", ShipType.class);
    public static final Property<Weblink> WEBLINK = Property.create("weblink", Weblink.class);

    public void setAutonomy(int autonomy) {
        writeProperty("autonomy", autonomy);
    }
    public int getAutonomy() {
        Object value = readProperty("autonomy");
        return (value != null) ? (Integer) value : 0;
    }

    public void setBreadth(int breadth) {
        writeProperty("breadth", breadth);
    }
    public int getBreadth() {
        Object value = readProperty("breadth");
        return (value != null) ? (Integer) value : 0;
    }

    public void setBridge(int bridge) {
        writeProperty("bridge", bridge);
    }
    public int getBridge() {
        Object value = readProperty("bridge");
        return (value != null) ? (Integer) value : 0;
    }

    public void setBuoyCapacity(int buoyCapacity) {
        writeProperty("buoyCapacity", buoyCapacity);
    }
    public int getBuoyCapacity() {
        Object value = readProperty("buoyCapacity");
        return (value != null) ? (Integer) value : 0;
    }

    public void setCallSign(String callSign) {
        writeProperty("callSign", callSign);
    }
    public String getCallSign() {
        return (String)readProperty("callSign");
    }

    public void setCommissionedDate(LocalDateTime commissionedDate) {
        writeProperty("commissionedDate", commissionedDate);
    }
    public LocalDateTime getCommissionedDate() {
        return (LocalDateTime)readProperty("commissionedDate");
    }

    public void setDecommissionedDate(LocalDateTime decommissionedDate) {
        writeProperty("decommissionedDate", decommissionedDate);
    }
    public LocalDateTime getDecommissionedDate() {
        return (LocalDateTime)readProperty("decommissionedDate");
    }

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setDraught(int draught) {
        writeProperty("draught", draught);
    }
    public int getDraught() {
        Object value = readProperty("draught");
        return (value != null) ? (Integer) value : 0;
    }

    public void setExtUpdate(LocalDateTime extUpdate) {
        writeProperty("extUpdate", extUpdate);
    }
    public LocalDateTime getExtUpdate() {
        return (LocalDateTime)readProperty("extUpdate");
    }

    public void setFloatCapacity(int floatCapacity) {
        writeProperty("floatCapacity", floatCapacity);
    }
    public int getFloatCapacity() {
        Object value = readProperty("floatCapacity");
        return (value != null) ? (Integer) value : 0;
    }

    public void setFreeboard(int freeboard) {
        writeProperty("freeboard", freeboard);
    }
    public int getFreeboard() {
        Object value = readProperty("freeboard");
        return (value != null) ? (Integer) value : 0;
    }

    public void setHeight(int height) {
        writeProperty("height", height);
    }
    public int getHeight() {
        Object value = readProperty("height");
        return (value != null) ? (Integer) value : 0;
    }

    public void setHomePort(String homePort) {
        writeProperty("homePort", homePort);
    }
    public String getHomePort() {
        return (String)readProperty("homePort");
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setImo(String imo) {
        writeProperty("imo", imo);
    }
    public String getImo() {
        return (String)readProperty("imo");
    }

    public void setInsertDate(LocalDateTime insertDate) {
        writeProperty("insertDate", insertDate);
    }
    public LocalDateTime getInsertDate() {
        return (LocalDateTime)readProperty("insertDate");
    }

    public void setLength(int length) {
        writeProperty("length", length);
    }
    public int getLength() {
        Object value = readProperty("length");
        return (value != null) ? (Integer) value : 0;
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setOriginalDataset(String originalDataset) {
        writeProperty("originalDataset", originalDataset);
    }
    public String getOriginalDataset() {
        return (String)readProperty("originalDataset");
    }

    public void setPassengerCapacity(int passengerCapacity) {
        writeProperty("passengerCapacity", passengerCapacity);
    }
    public int getPassengerCapacity() {
        Object value = readProperty("passengerCapacity");
        return (value != null) ? (Integer) value : 0;
    }

    public void setRef(String ref) {
        writeProperty("ref", ref);
    }
    public String getRef() {
        return (String)readProperty("ref");
    }

    public void setRefParent(int refParent) {
        writeProperty("refParent", refParent);
    }
    public int getRefParent() {
        Object value = readProperty("refParent");
        return (value != null) ? (Integer) value : 0;
    }

    public void setRefTmp(String refTmp) {
        writeProperty("refTmp", refTmp);
    }
    public String getRefTmp() {
        return (String)readProperty("refTmp");
    }

    public void setSpeed(int speed) {
        writeProperty("speed", speed);
    }
    public int getSpeed() {
        Object value = readProperty("speed");
        return (value != null) ? (Integer) value : 0;
    }

    public void setTrackingSystemId(int trackingSystemId) {
        writeProperty("trackingSystemId", trackingSystemId);
    }
    public int getTrackingSystemId() {
        Object value = readProperty("trackingSystemId");
        return (value != null) ? (Integer) value : 0;
    }

    public void setUpdateDate(LocalDateTime updateDate) {
        writeProperty("updateDate", updateDate);
    }
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime)readProperty("updateDate");
    }

    public void setValidated(int validated) {
        writeProperty("validated", validated);
    }
    public int getValidated() {
        Object value = readProperty("validated");
        return (value != null) ? (Integer) value : 0;
    }

    public void setCountry(Country country) {
        setToOneTarget("country", country, true);
    }

    public Country getCountry() {
        return (Country)readProperty("country");
    }


    public void addToCruises(Cruise obj) {
        addToManyTarget("cruises", obj, true);
    }
    public void removeFromCruises(Cruise obj) {
        removeToManyTarget("cruises", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Cruise> getCruises() {
        return (List<Cruise>)readProperty("cruises");
    }


    public void addToDocs(Doc obj) {
        addToManyTarget("docs", obj, true);
    }
    public void removeFromDocs(Doc obj) {
        removeToManyTarget("docs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Doc> getDocs() {
        return (List<Doc>)readProperty("docs");
    }


    public void addToImages(Image obj) {
        addToManyTarget("images", obj, true);
    }
    public void removeFromImages(Image obj) {
        removeToManyTarget("images", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Image> getImages() {
        return (List<Image>)readProperty("images");
    }


    public void addToPtfDeployments(PtfDeployment obj) {
        addToManyTarget("ptfDeployments", obj, true);
    }
    public void removeFromPtfDeployments(PtfDeployment obj) {
        removeToManyTarget("ptfDeployments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfDeployment> getPtfDeployments() {
        return (List<PtfDeployment>)readProperty("ptfDeployments");
    }


    public void addToRetrievals(Retrieval obj) {
        addToManyTarget("retrievals", obj, true);
    }
    public void removeFromRetrievals(Retrieval obj) {
        removeToManyTarget("retrievals", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Retrieval> getRetrievals() {
        return (List<Retrieval>)readProperty("retrievals");
    }


    public void addToShipHistories(ShipHistory obj) {
        addToManyTarget("shipHistories", obj, true);
    }
    public void removeFromShipHistories(ShipHistory obj) {
        removeToManyTarget("shipHistories", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ShipHistory> getShipHistories() {
        return (List<ShipHistory>)readProperty("shipHistories");
    }


    public void addToShipLocs(ShipLoc obj) {
        addToManyTarget("shipLocs", obj, true);
    }
    public void removeFromShipLocs(ShipLoc obj) {
        removeToManyTarget("shipLocs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ShipLoc> getShipLocs() {
        return (List<ShipLoc>)readProperty("shipLocs");
    }


    public void addToShipRecruitments(ShipRecruitment obj) {
        addToManyTarget("shipRecruitments", obj, true);
    }
    public void removeFromShipRecruitments(ShipRecruitment obj) {
        removeToManyTarget("shipRecruitments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ShipRecruitment> getShipRecruitments() {
        return (List<ShipRecruitment>)readProperty("shipRecruitments");
    }


    public void setShipStatus(ShipStatus shipStatus) {
        setToOneTarget("shipStatus", shipStatus, true);
    }

    public ShipStatus getShipStatus() {
        return (ShipStatus)readProperty("shipStatus");
    }


    public void setShipType(ShipType shipType) {
        setToOneTarget("shipType", shipType, true);
    }

    public ShipType getShipType() {
        return (ShipType)readProperty("shipType");
    }


    public void setWeblink(Weblink weblink) {
        setToOneTarget("weblink", weblink, true);
    }

    public Weblink getWeblink() {
        return (Weblink)readProperty("weblink");
    }


}
