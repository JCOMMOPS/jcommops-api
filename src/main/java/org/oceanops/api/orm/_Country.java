package org.oceanops.api.orm;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _Country was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Country extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<Integer> ACTIVE = Property.create("active", Integer.class);
    public static final Property<String> CODE2 = Property.create("code2", String.class);
    public static final Property<String> CODE3 = Property.create("code3", String.class);
    public static final Property<String> COLOR = Property.create("color", String.class);
    public static final Property<Integer> EEZ = Property.create("eez", Integer.class);
    public static final Property<Integer> ID = Property.create("id", Integer.class);
    public static final Property<Integer> IOC_MEMBER = Property.create("iocMember", Integer.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> NAME_LONG = Property.create("nameLong", String.class);
    public static final Property<String> NAME_SHORT = Property.create("nameShort", String.class);
    public static final Property<Integer> NUMCODE = Property.create("numcode", Integer.class);
    public static final Property<Integer> TO_NOTIFY = Property.create("toNotify", Integer.class);
    public static final Property<Integer> WMO_MEMBER = Property.create("wmoMember", Integer.class);
    public static final Property<List<Agency>> AGENCIES = Property.create("agencies", List.class);
    public static final Property<List<Contact>> CONTACTS = Property.create("contacts", List.class);
    public static final Property<List<CountryCommitment>> COUNTRY_COMMITMENTS = Property.create("countryCommitments", List.class);
    public static final Property<List<CruiseCountry>> CRUISE_COUNTRIES = Property.create("cruiseCountries", List.class);
    public static final Property<List<GtsCccc>> GTS_CCCCS = Property.create("gtsCcccs", List.class);
    public static final Property<List<Meeting>> MEETINGS = Property.create("meetings", List.class);
    public static final Property<List<MzmsPtfCountry>> MZMS_PTF_COUNTRIES = Property.create("mzmsPtfCountries", List.class);
    public static final Property<List<NetworkCountry>> NETWORK_COUNTRIES = Property.create("networkCountries", List.class);
    public static final Property<List<Program>> PROGRAMS = Property.create("programs", List.class);
    public static final Property<List<PtfDeployment>> PTF_DEPLOYMENTS = Property.create("ptfDeployments", List.class);
    public static final Property<List<PtfHardware>> PTF_HARDWARES = Property.create("ptfHardwares", List.class);
    public static final Property<List<PtfSensorModel>> PTF_SENSOR_MODELS = Property.create("ptfSensorModels", List.class);
    public static final Property<List<Retrieval>> RETRIEVALS = Property.create("retrievals", List.class);
    public static final Property<List<ShipHistory>> SHIP_HISTORIES = Property.create("shipHistories", List.class);
    public static final Property<List<Ship>> SHIPS = Property.create("ships", List.class);
    public static final Property<List<UserGroupContact>> USER_GROUP_CONTACTS = Property.create("userGroupContacts", List.class);
    public static final Property<List<Weblink>> WEBLINKS = Property.create("weblinks", List.class);

    public void setActive(int active) {
        writeProperty("active", active);
    }
    public int getActive() {
        Object value = readProperty("active");
        return (value != null) ? (Integer) value : 0;
    }

    public void setCode2(String code2) {
        writeProperty("code2", code2);
    }
    public String getCode2() {
        return (String)readProperty("code2");
    }

    public void setCode3(String code3) {
        writeProperty("code3", code3);
    }
    public String getCode3() {
        return (String)readProperty("code3");
    }

    public void setColor(String color) {
        writeProperty("color", color);
    }
    public String getColor() {
        return (String)readProperty("color");
    }

    public void setEez(int eez) {
        writeProperty("eez", eez);
    }
    public int getEez() {
        Object value = readProperty("eez");
        return (value != null) ? (Integer) value : 0;
    }

    public void setId(int id) {
        writeProperty("id", id);
    }
    public int getId() {
        Object value = readProperty("id");
        return (value != null) ? (Integer) value : 0;
    }

    public void setIocMember(int iocMember) {
        writeProperty("iocMember", iocMember);
    }
    public int getIocMember() {
        Object value = readProperty("iocMember");
        return (value != null) ? (Integer) value : 0;
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setNameLong(String nameLong) {
        writeProperty("nameLong", nameLong);
    }
    public String getNameLong() {
        return (String)readProperty("nameLong");
    }

    public void setNameShort(String nameShort) {
        writeProperty("nameShort", nameShort);
    }
    public String getNameShort() {
        return (String)readProperty("nameShort");
    }

    public void setNumcode(int numcode) {
        writeProperty("numcode", numcode);
    }
    public int getNumcode() {
        Object value = readProperty("numcode");
        return (value != null) ? (Integer) value : 0;
    }

    public void setToNotify(int toNotify) {
        writeProperty("toNotify", toNotify);
    }
    public int getToNotify() {
        Object value = readProperty("toNotify");
        return (value != null) ? (Integer) value : 0;
    }

    public void setWmoMember(int wmoMember) {
        writeProperty("wmoMember", wmoMember);
    }
    public int getWmoMember() {
        Object value = readProperty("wmoMember");
        return (value != null) ? (Integer) value : 0;
    }

    public void addToAgencies(Agency obj) {
        addToManyTarget("agencies", obj, true);
    }
    public void removeFromAgencies(Agency obj) {
        removeToManyTarget("agencies", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Agency> getAgencies() {
        return (List<Agency>)readProperty("agencies");
    }


    public void addToContacts(Contact obj) {
        addToManyTarget("contacts", obj, true);
    }
    public void removeFromContacts(Contact obj) {
        removeToManyTarget("contacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Contact> getContacts() {
        return (List<Contact>)readProperty("contacts");
    }


    public void addToCountryCommitments(CountryCommitment obj) {
        addToManyTarget("countryCommitments", obj, true);
    }
    public void removeFromCountryCommitments(CountryCommitment obj) {
        removeToManyTarget("countryCommitments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CountryCommitment> getCountryCommitments() {
        return (List<CountryCommitment>)readProperty("countryCommitments");
    }


    public void addToCruiseCountries(CruiseCountry obj) {
        addToManyTarget("cruiseCountries", obj, true);
    }
    public void removeFromCruiseCountries(CruiseCountry obj) {
        removeToManyTarget("cruiseCountries", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CruiseCountry> getCruiseCountries() {
        return (List<CruiseCountry>)readProperty("cruiseCountries");
    }


    public void addToGtsCcccs(GtsCccc obj) {
        addToManyTarget("gtsCcccs", obj, true);
    }
    public void removeFromGtsCcccs(GtsCccc obj) {
        removeToManyTarget("gtsCcccs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<GtsCccc> getGtsCcccs() {
        return (List<GtsCccc>)readProperty("gtsCcccs");
    }


    public void addToMeetings(Meeting obj) {
        addToManyTarget("meetings", obj, true);
    }
    public void removeFromMeetings(Meeting obj) {
        removeToManyTarget("meetings", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Meeting> getMeetings() {
        return (List<Meeting>)readProperty("meetings");
    }


    public void addToMzmsPtfCountries(MzmsPtfCountry obj) {
        addToManyTarget("mzmsPtfCountries", obj, true);
    }
    public void removeFromMzmsPtfCountries(MzmsPtfCountry obj) {
        removeToManyTarget("mzmsPtfCountries", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<MzmsPtfCountry> getMzmsPtfCountries() {
        return (List<MzmsPtfCountry>)readProperty("mzmsPtfCountries");
    }


    public void addToNetworkCountries(NetworkCountry obj) {
        addToManyTarget("networkCountries", obj, true);
    }
    public void removeFromNetworkCountries(NetworkCountry obj) {
        removeToManyTarget("networkCountries", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<NetworkCountry> getNetworkCountries() {
        return (List<NetworkCountry>)readProperty("networkCountries");
    }


    public void addToPrograms(Program obj) {
        addToManyTarget("programs", obj, true);
    }
    public void removeFromPrograms(Program obj) {
        removeToManyTarget("programs", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Program> getPrograms() {
        return (List<Program>)readProperty("programs");
    }


    public void addToPtfDeployments(PtfDeployment obj) {
        addToManyTarget("ptfDeployments", obj, true);
    }
    public void removeFromPtfDeployments(PtfDeployment obj) {
        removeToManyTarget("ptfDeployments", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfDeployment> getPtfDeployments() {
        return (List<PtfDeployment>)readProperty("ptfDeployments");
    }


    public void addToPtfHardwares(PtfHardware obj) {
        addToManyTarget("ptfHardwares", obj, true);
    }
    public void removeFromPtfHardwares(PtfHardware obj) {
        removeToManyTarget("ptfHardwares", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfHardware> getPtfHardwares() {
        return (List<PtfHardware>)readProperty("ptfHardwares");
    }


    public void addToPtfSensorModels(PtfSensorModel obj) {
        addToManyTarget("ptfSensorModels", obj, true);
    }
    public void removeFromPtfSensorModels(PtfSensorModel obj) {
        removeToManyTarget("ptfSensorModels", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<PtfSensorModel> getPtfSensorModels() {
        return (List<PtfSensorModel>)readProperty("ptfSensorModels");
    }


    public void addToRetrievals(Retrieval obj) {
        addToManyTarget("retrievals", obj, true);
    }
    public void removeFromRetrievals(Retrieval obj) {
        removeToManyTarget("retrievals", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Retrieval> getRetrievals() {
        return (List<Retrieval>)readProperty("retrievals");
    }


    public void addToShipHistories(ShipHistory obj) {
        addToManyTarget("shipHistories", obj, true);
    }
    public void removeFromShipHistories(ShipHistory obj) {
        removeToManyTarget("shipHistories", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<ShipHistory> getShipHistories() {
        return (List<ShipHistory>)readProperty("shipHistories");
    }


    public void addToShips(Ship obj) {
        addToManyTarget("ships", obj, true);
    }
    public void removeFromShips(Ship obj) {
        removeToManyTarget("ships", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Ship> getShips() {
        return (List<Ship>)readProperty("ships");
    }


    public void addToUserGroupContacts(UserGroupContact obj) {
        addToManyTarget("userGroupContacts", obj, true);
    }
    public void removeFromUserGroupContacts(UserGroupContact obj) {
        removeToManyTarget("userGroupContacts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<UserGroupContact> getUserGroupContacts() {
        return (List<UserGroupContact>)readProperty("userGroupContacts");
    }


    public void addToWeblinks(Weblink obj) {
        addToManyTarget("weblinks", obj, true);
    }
    public void removeFromWeblinks(Weblink obj) {
        removeToManyTarget("weblinks", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Weblink> getWeblinks() {
        return (List<Weblink>)readProperty("weblinks");
    }


}
